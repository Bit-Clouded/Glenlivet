AWSTemplateFormatVersion: 2010-09-09
Description: A template to launch Vsts build servers.
Metadata:
  DefaultName: VSTS
Parameters:
  KeyPairName:
    Description: Name of an existing EC2 KeyPair
    Type: String
    Default: ''
  AgentInstanceType:
    Description: Agent EC2 instance type
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.medium
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  WindowsAgentAmi:
    Description: AMI to use for windows build agent.
    Type: String
  VstsOrganisation:
    Description: ''
    Type: String
  VstsAgentPool:
    Description: ''
    Type: String
  VstsPatToken:
    Description: ''
    Type: String
  VstsdAgentBinUrl:
    Description: ''
    Type: String
    Default: >-
      https://github.com/Microsoft/vsts-agent/releases/download/v2.109.1/vsts-agent-win7-x64-2.109.1.zip
  GitBinUrl:
    Description: ''
    Type: String
    Default: >-
      https://github.com/git-for-windows/git/releases/download/v2.11.0.windows.1/Git-2.11.0-64-bit.exe
  VpcId:
    Description: 'VPCid associated with the ssubnets. [elb-subnets.parameters.VpcId]'
    Type: 'AWS::EC2::VPC::Id'
  ServerSubnets:
    Description: 'VPCid associated with the subnets. [elb-subnets.outputs.WebServerSubnets]'
    Type: 'List<AWS::EC2::Subnet::Id>'
Conditions:
  HasNoKeypair: !Equals 
    - !Ref KeyPairName
    - ''
Resources:
  WebServersRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /devservices/vsts-agents/
      ManagedPolicyArns: []
  WebServersInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /devservices/vsts-agents/
      Roles:
        - !Ref WebServersRole
  VstsWindowsAgentLc:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      InstanceType: !Ref AgentInstanceType
      ImageId: !Ref WindowsAgentAmi
      IamInstanceProfile: !Ref WebServersInstanceProfile
      KeyName: !If 
        - HasNoKeypair
        - !Ref 'AWS::NoValue'
        - !Ref KeyPairName
      SecurityGroups:
        - !Ref AgentSg
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '80'
            VolumeType: gp2
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              <powershell>
            - $vsts_agent_pool = "
            - !Ref VstsAgentPool
            - |
              "
            - $vsts_agent_url = "
            - !Ref VstsdAgentBinUrl
            - |
              "
            - $vsts_org_name = "
            - !Ref VstsOrganisation
            - |
              "
            - $vsts_pat_token = "
            - !Ref VstsPatToken
            - |
              "
            - $git_bin_url = "
            - !Ref GitBinUrl
            - |
              "
            - >
              Invoke-WebRequest -UseBasicParsing -OutFile
              "c:\vsts\git-installer.exe" $git_bin_url
            - >
              Start-Process -FilePath "c:\vsts\git-installer.exe" -ArgumentList
              "/Silent" -PassThru -Wait
            - |
              $file_name = "vsts-agent.zip"
            - |
              mkdir c:\vsts
            - |
              mkdir c:\vsts\workspace
            - |
              cd c:\vsts
            - >
              Invoke-WebRequest -UseBasicParsing -OutFile $file_name
              $vsts_agent_url
            - |
              Add-Type -AssemblyName System.IO.Compression.FileSystem;
            - >
              [System.IO.Compression.ZipFile]::ExtractToDirectory("$PWD\$file_name",
              "$PWD")
            - >
              $id = (Invoke-WebRequest
              http://169.254.169.254/latest/meta-data/instance-id).Content
            - >-
              .\config.cmd --unattended --url
              https://$vsts_org_name.visualstudio.com 
            - '--auth PAT --token $vsts_pat_token '
            - |
              --pool $vsts_agent_pool --agent $id --work c:\vsts\workspace\
            - |
              .\run.cmd
            - </powershell>
  VstsWindowsAgentAsg:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier: !Ref ServerSubnets
      LaunchConfigurationName: !Ref VstsWindowsAgentLc
      MinSize: '0'
      MaxSize: '20'
      Tags:
        - Key: Name
          Value: Vsts Agent
          PropagateAtLaunch: 'True'
  AgentSg:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Vsts Agent Security Group. No in bound traffic other than Vsts Server.
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: Vsts Agent Security Group
  DeploymentTargetSg:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Vsts Agent Security Group. No in bound traffic other than Vsts Server.
      SecurityGroupIngress:
        - IpProtocol: '-1'
          SourceSecurityGroupId: !Ref AgentSg
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: Vsts Agent Security Group
