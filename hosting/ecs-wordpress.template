AWSTemplateFormatVersion: 2010-09-09
Description: HA Wordpress on ECS
Metadata:
  DefaultName: JoomlaOnEcs
  Dependencies:
    - TemplatePath: networking/vpc
      Resources:
        ElbSg: ElbSecGroup
        HttpSg: HttpNsSecGroup
    - TemplatePath: networking/elb-subnets
      Parameters:
        VpcId: VpcId
      Outputs:
        ElbSubnets: ElbSubnets
      NestedDependency: networking/vpc
    - TemplatePath: platforms/ecs-app-base
      Parameters:
        DbUsername: DbUsername
      Resources:
        TaskRole: TaskRole
        EcsServiceRole: EcsServiceRole
      Outputs:
        DatabaseEndpointAddress: DatabaseEndpointAddress
    - TemplatePath: platforms/ecs-base
      Resources:
        EcsCluster: EcsCluster
    - TemplatePath: analytics/logs-store
      Resources:
        AccessLogBucket: Raw
        LxDockerLog: LxDockerLog
    - TemplatePath: hosting/loadbalancer
      Resources:
        HttpsListener: HttpsListener
        HttpListener: HttpListener
      Outputs:
        GatewayCanonicalZoneId: GatewayCanonicalZonId
        GatewayDnsName: GatewayDnsName
        GatewayName: GatewayName

Parameters:
  # LoadBalancer Parameters
  GatewayName:
    Type: String
    Description: 'Loadbalancer full name'
  GatewayDnsName:
    Type: String
    Description: 'Loadbalancer DNS name'
  GatewayCanonicalZoneId:
    Type: String
    Description: 'Loadbalancer Zone ID'
  HttpsListener:
    Type: String
    Description: 'Loadbalancer HTTS listener'
    Default: ''
  HttpListener:
    Type: String
    Description: 'Loadbalancer HTT listener'
  ListenerPriority:
    Description: ''
    Type: Number
    Default: 40
  # /LoadBalancer Parameters

  VpcId:
    Description: 'VPCid associated with the subnets. [elb-subnets.parameters.VpcId]'
    Type: 'AWS::EC2::VPC::Id'
  EcsCluster:
    Type: String
    Description: '[ecs-base.resources.EcsCluster]'
  ElbSg:
    Description: 'Elb Security Group. [vpc.resources.ElbSecGroup]'
    Type: String
  HttpSg:
    Description: 'Elb Target Security Group. [vpc.resources.HttpNsSecGroup]'
    Type: String
  ElbSubnets:
    Description: 'VPCid associated with the subnets. [ecs-base.parameters.ElbSubnets]'
    Type: 'List<AWS::EC2::Subnet::Id>'
  TaskRole:
    Description: '[ecs-app-base.resources.TaskRole]'
    Type: String
  DbName:
    Description: >-
      Name of the database in the database server. Can be changed to facilitate
      a different instance of the installation.
    Type: String
    Default: ''
  DbUsername:
    Description: 'MariaDB server username [ecs-app-base.parameters.DbUsername]'
    Type: String
  DbPassword:
    Description: MariaDB server password
    Type: String
    Default: Password1234
    NoEcho: 'True'
  EcsServiceRole:
    Description: ''
    Type: String
  DatabaseEndpointAddress:
    Description: ''
    Type: String
  ImageName:
    Description: ''
    Type: String
    Default: 'wordpress:4.7.0-php7.0-apache'
  LxDockerLog:
    Description: ''
    Type: String
  AccessLogBucket:
    Description: Elb Target Security Group.
    Type: String
  EfsPath:
    Description:
      EFS disk path segment. It has a /mnt/efs/ prefix followed by the guid of the CloudFormation stack id when left blank.
    Type: String
    Default: ''
  CpuReservation:
    Description: CPU Unit to Reserve
    Type: Number
    Default: 512
  MemoryReservation:
    Description: Memory in MB to Reserve
    Type: Number
    Default: 1024

  # Domain
  HostedZoneName:
    Description:
      Hosted Zone for the url (Without trailing '.')
    Type: String
  Subdomain:
    Description:
      Subdomain (Without trailing '.')
    Type: String

Conditions:
  HasNoEfsPath: !Equals 
    - !Ref EfsPath
    - ''
  HasNoDbName: !Equals 
    - !Ref DbName
    - ''
  HasNoHttpsListener: !Equals [!Ref HttpsListener, '']

Resources:
  Route53:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneName: !Sub '${HostedZoneName}.'
      Comment: Hostname
      Name: !Sub ${Subdomain}.${HostedZoneName}.
      Type: A
      AliasTarget:
        DNSName: !Ref GatewayDnsName
        HostedZoneId: !Ref GatewayCanonicalZoneId
  AlbListenerRule:
    Type: 'AWS::ElasticLoadBalancingV2::ListenerRule'
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref AlbTargetGroup
      Conditions:
        - Field: host-header
          Values: [!Sub '${Subdomain}.${HostedZoneName}']
      ListenerArn: !If
        - HasNoHttpsListener
        - !Ref HttpListener
        - !Ref HttpsListener
      Priority: !Ref ListenerPriority
  AlbTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /wp-admin/images/wordpress-logo.svg
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 10
      VpcId: !Ref VpcId
  TaskDef:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
        - Name: wordpress
          Cpu: !Ref CpuReservation
          Essential: 'true'
          Image: !Ref ImageName
          Memory: !Ref MemoryReservation
          Environment:
            - Name: WORDPRESS_DB_HOST
              Value: !Ref DatabaseEndpointAddress
            - Name: WORDPRESS_DB_USER
              Value: !Ref DbUsername
            - Name: WORDPRESS_DB_PASSWORD
              Value: !Ref DbPassword
            - Name: WORDPRESS_DB_NAME
              Value: !If 
                - HasNoDbName
                - !Select ['2', !Split ['/', !Ref 'AWS::StackId']]
                - !Ref DbName
            - Name: WORDPRESS_AUTH_KEY
              Value: !Ref DbPassword
            - Name: WORDPRESS_SECURE_AUTH_KEY
              Value: !Ref DbPassword
            - Name: WORDPRESS_LOGGED_IN_KEY
              Value: !Ref DbPassword
            - Name: WORDPRESS_NONCE_KEY
              Value: !Ref DbPassword
            - Name: WORDPRESS_AUTH_SALT
              Value: !Ref DbPassword
            - Name: WORDPRESS_SECURE_AUTH_SALT
              Value: !Ref DbPassword
            - Name: WORDPRESS_LOGGED_IN_SALT
              Value: !Ref DbPassword
            - Name: WORDPRESS_NONCE_SALT
              Value: !Ref DbPassword
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LxDockerLog
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: apache
          MountPoints:
            - SourceVolume: efs
              ContainerPath: /var/www/html
              ReadOnly: false
      TaskRoleArn: !Ref TaskRole
      Volumes:
        - Name: efs
          Host:
            SourcePath: !Join 
              - ''
              - - /mnt/efs/
                - !If 
                  - HasNoEfsPath
                  - !Select ['2', !Split ['/', !Ref 'AWS::StackId']]
                  - !Ref EfsPath
  EcsService:
    Type: 'AWS::ECS::Service'
    DependsOn: AlbListenerRule
    Properties:
      Cluster: !Ref EcsCluster
      DesiredCount: '1'
      Role: !Ref EcsServiceRole
      LoadBalancers:
        - ContainerName: wordpress
          ContainerPort: '80'
          TargetGroupArn: !Ref AlbTargetGroup
      TaskDefinition: !Ref TaskDef
Outputs:
  Service:
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/ecs/home?region=${AWS::Region}#/clusters/${EcsCluster}/services/${EcsService.Name}/tasks
    Description: ECS service that manages the containers running wordpress.
  BackofficeUrl:
    Value: !Sub http://${Subdomain}.${HostedZoneName}/wp-admin/
    Description: Url to the admin page.
  PublicUrl:
    Value: !Sub http://${Subdomain}.${HostedZoneName}/
    Description: Url to the public facing site.
