AWSTemplateFormatVersion: 2010-09-09
Description: HA Rancher Cluster on AutoScaling Group
Metadata:
  DefaultName: Rancher
  Dependencies:
    - TemplatePath: networking/private-subnets
      Resources:
        DbSubnetGroup: RdsSubnetGroup
    - TemplatePath: networking/vpc
      Resources:
        ElbSg: ElbSecGroup
        ElbTargetSg: ElbTargetSecGroup
        HttpSg: HttpNsSecGroup
    - TemplatePath: networking/elb-subnets
      Parameters:
        VpcId: VpcId
      Outputs:
        ElbSubnets: ElbSubnets
        ServerSubnets: WebServerSubnets
      NestedDependency: networking/vpc
    - TemplatePath: analytics/logs-store
      Resources:
        RawLogBucket: Raw
Parameters:
  KeyPairName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: String
    Default: ''
  AdminElbScheme:
    Type: String
    Default: internal
    AllowedValues:
      - internet-facing
      - internal
    Description: Whether the site has a public ip address and is publicly available.
  DbStorageQuota:
    Description: Disk size of MariaDB server.
    Default: '20'
    Type: Number
  DbInstanceTyp:
    Description: MariaDB server instance type
    Type: String
    Default: db.t2.medium
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.m3.medium
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
    ConstraintDescription: must be a valid RDS instance type.
  DbUsername:
    Description: MariaDB server username
    Type: String
    Default: sqladmin
  DbPassword:
    Description: MariaDB server password
    Type: String
    Default: Password1234
    NoEcho: 'True'
  DbSnapshot:
    Description: MariaDB server snapshot
    Type: String
    Default: ''
  DbSubnetGroup:
    Description: Subnet Group for hosting the MariaDB server.
    Type: String
  WebInstanceType:
    Description: Phabricator server instance type
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.medium
      - m5.large
      - m5.xlarge
      - m5.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  RancherAmiId:
    Type: String
  VpcId:
    Description: VPCid associated with the subnets.
    Type: 'AWS::EC2::VPC::Id'
  HostedZoneName:
    Description: >-
      Hosted Zone for the url (Without '.'). You need to fill in Subdomain as
      well for custom domain to work.
    Type: String
    Default: ''
  Subdomain:
    Description: >-
      Subdomain (Without '.'). You need to fill in HostedZoneName as well for
      custom domain to work.
    Type: String
    Default: ''
  ElbSg:
    Description: Elb Security Group.
    Type: String
  ElbTargetSg:
    Description: Elb Target Security Group.
    Type: String
  HttpSg:
    Description: Elb Target Security Group.
    Type: String
  ElbSubnets:
    Description: VPCid associated with the subnets.
    Type: 'List<AWS::EC2::Subnet::Id>'
  ServerSubnets:
    Description: VPCid associated with the subnets.
    Type: 'List<AWS::EC2::Subnet::Id>'
  RawLogBucket:
    Description: 'Elb Target Security Group. [logs-store.resources.Raw]'
    Type: String
Conditions:
  HasDbSnapshot: !Not 
    - !Equals 
      - !Ref DbSnapshot
      - ''
  HasHostname: !And 
    - !Not 
      - !Equals 
        - !Ref Subdomain
        - ''
    - !Not 
      - !Equals 
        - !Ref HostedZoneName
        - ''
  HasNoKeypair: !Equals 
    - !Ref KeyPairName
    - ''
Resources:
  Route53:
    Type: 'AWS::Route53::RecordSet'
    Condition: HasHostname
    Properties:
      HostedZoneName: !Join 
        - .
        - - !Ref HostedZoneName
          - ''
      Comment: Hostname
      Name: !Join 
        - .
        - - !Ref Subdomain
          - !Ref HostedZoneName
          - ''
      Type: A
      AliasTarget:
        DNSName: !GetAtt 
          - AdminGateway
          - DNSName
        HostedZoneId: !GetAtt 
          - AdminGateway
          - CanonicalHostedZoneNameID
  AdminAsg:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier: !Ref ServerSubnets
      Tags:
        - Value: Rancher Server
          PropagateAtLaunch: true
          Key: Name
      LoadBalancerNames:
        - !Ref AdminGateway
      MinSize: 3
      MaxSize: 5
      LaunchConfigurationName: !Ref AdminServerLc
    DependsOn: Database
  AdminServerLc:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      KeyName: !If 
        - HasNoKeypair
        - !Ref 'AWS::NoValue'
        - !Ref KeyPairName
      SecurityGroups:
        - !Ref WebServerSg
        - !Ref ElbTargetSg
      InstanceType: !Ref WebInstanceType
      ImageId: !Ref RancherAmiId
      UserData: !Base64 
        'Fn::Sub': |
          #cloud-config
          rancher:
            services:
              rancher-server:
                image: rancher/server
                ports:
                  - 8080:8080
                  - 9345:9345
                restart: always
                command: [
                  "--db-name","rancher",
                  "--advertise-address","$private_ipv4",
                  "--db-host","${Database.Endpoint.Address}",
                  "--db-port","${Database.Endpoint.Port}",
                  "--db-user","${DbUsername}",
                  "--db-pass","${DbPassword}"
                ]

  WorkerAsg:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier: !Ref ServerSubnets
      Tags:
        - Value: Rancher Node
          PropagateAtLaunch: true
          Key: Name
      MinSize: '1'
      MaxSize: '20'
      LaunchConfigurationName: !Ref WorkerLc
  WorkerLc:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      KeyName: !If 
        - HasNoKeypair
        - !Ref 'AWS::NoValue'
        - !Ref KeyPairName
      SecurityGroups:
        - !Ref WebServerSg
      InstanceType: !Ref WebInstanceType
      ImageId: !Ref RancherAmiId
      UserData: !Base64
        'Fn::Sub': |
          #cloud-config
          rancher:
            services:
              register:
                priviledged: true
                volumes:
                - /var/run/docker.sock:/var/run/docker.sock
                image: rancher/agent
                command:
                  - http://${AdminGateway.DNSName}
    DependsOn: AdminAsg
  WebServerSg:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      SecurityGroupIngress: []
      VpcId: !Ref VpcId
      GroupDescription: Security group for the RancherOS admin web servers
  WebServerSgSelfIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref WebServerSg
      IpProtocol: tcp
      ToPort: '9345'
      FromPort: '9345'
      SourceSecurityGroupId: !Ref WebServerSg
  AdminGateway:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      Subnets: !Ref ElbSubnets
      Scheme: !Ref AdminElbScheme
      Listeners:
        - InstancePort: 8080
          LoadBalancerPort: 80
          Protocol: tcp
          InstanceProtocol: tcp
      SecurityGroups:
        - !Ref ElbSg
        - !Ref HttpSg
      Policies:
        - PolicyName: EnableProxyProtocol
          InstancePorts:
            - '8080'
          PolicyType: ProxyProtocolPolicyType
          Attributes:
            - Name: ProxyProtocol
              Value: 'true'
      HealthCheck:
        HealthyThreshold: 2
        Interval: 30
        Target: 'HTTP:8080/ping'
        Timeout: 10
        UnhealthyThreshold: 5
      ConnectionDrainingPolicy:
        Enabled: 'true'
        Timeout: '60'
      AccessLoggingPolicy:
        EmitInterval: '5'
        Enabled: 'true'
        S3BucketName: !Ref RawLogBucket
  Database:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      VPCSecurityGroups:
        - !Ref RancherDbSg
      AllocatedStorage: !Ref DbStorageQuota
      DBInstanceClass: !Ref DbInstanceTyp
      DBParameterGroupName: !Ref DbParamGroup
      DBName: rancher
      Engine: mariadb
      EngineVersion: 10.1.23
      MasterUsername: !Ref DbUsername
      MasterUserPassword: !Ref DbPassword
      DBSnapshotIdentifier: !If 
        - HasDbSnapshot
        - !Ref DbSnapshot
        - !Ref 'AWS::NoValue'
      DBSubnetGroupName: !Ref DbSubnetGroup
      Tags:
        - Key: Name
          Value: RancherOS Database
      StorageType: gp2
      MultiAZ: 'true'
    DeletionPolicy: Snapshot
  DbParamGroup:
    Type: 'AWS::RDS::DBParameterGroup'
    Properties:
      Description: CloudFormation Sample Database Parameter Group
      Family: mariadb10.1
      Parameters: {}
  RancherDbSg:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      SecurityGroupIngress:
        - ToPort: '3306'
          IpProtocol: tcp
          FromPort: '3306'
          SourceSecurityGroupId: !Ref WebServerSg
      VpcId: !Ref VpcId
      GroupDescription: RancherOS Database Security Group
Outputs:
  AdminPanel:
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - AdminGateway
          - DNSName
    Description: Admin panel url.
