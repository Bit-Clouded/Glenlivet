AWSTemplateFormatVersion: 2010-09-09
Description: Base Component for CMS' on ECS
Metadata:
  DefaultName: EcsAppBase
  Dependencies:
    - TemplatePath: networking/private-subnets
      Resources:
        DbSubnetGroup: RdsSubnetGroup
      NestedDependency: networking/vpc
    - TemplatePath: platforms/ecs-base
      Resources:
        DatabaseSg: DatabaseSg
        EcsCluster: EcsCluster
      NestedDependency: networking/vpc
    - TemplatePath: networking/elb-subnets
      Outputs:
        ElbSubnets: ElbSubnets
      NestedDependency: networking/vpc.template
    - TemplatePath: networking/vpc
Parameters:
  EcsCluster:
    Type: String
    Description: '[ecs-base.resources.EcsCluster]'
  ElbSubnets:
    Description: 'VPCid associated with the subnets. [ecs-base.parameters.ElbSubnets]'
    Type: 'List<AWS::EC2::Subnet::Id>'
  DatabaseSg:
    Description: 'VPCid associated with the subnets. [ecs-base.Resources.DatabaseSg]'
    Type: String
  DbStorageQuota:
    Description: Disk size of MariaDB server.
    Default: '20'
    Type: Number
  DbInstanceType:
    Description: MariaDB server instance type
    Type: String
    Default: db.t2.micro
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.m3.medium
      - db.m4.large
      - db.m4.xlarge
      - db.m4.2xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
    ConstraintDescription: must be a valid RDS instance type.
  DbName:
    Description: MariaDB server username
    Type: String
    Default: appdefault
  DbUsername:
    Description: MariaDB server username
    Type: String
    Default: sqladmin
  DbPassword:
    Description: MariaDB server password
    Type: String
    Default: Password1234
    NoEcho: 'True'
  DbSnapshot:
    Description: MariaDB server snapshot
    Type: String
    Default: ''
  DbSubnetGroup:
    Description: >-
      Subnet Group for hosting the MariaDB server.
      [private-subnets.resources.RdsSubnetGroup]
    Type: String
Conditions:
  HasDbSnapshot: !Not 
    - !Equals 
      - !Ref DbSnapshot
      - ''
Resources:
  TaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: ecs-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: '*'
                Resource:
                  - !Join 
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref Utility
                  - !Join 
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref Utility
                      - /*
  Database:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      VPCSecurityGroups:
        - !Ref DatabaseSg
      AllocatedStorage: !Ref DbStorageQuota
      DBInstanceClass: !Ref DbInstanceType
      DBParameterGroupName: !Ref DbParamGroup
      DBName: !Ref DbName
      Engine: mariadb
      EngineVersion: 10.1.23
      MasterUsername: !Ref DbUsername
      MasterUserPassword: !Ref DbPassword
      DBSnapshotIdentifier: !If 
        - HasDbSnapshot
        - !Ref DbSnapshot
        - !Ref 'AWS::NoValue'
      DBSubnetGroupName: !Ref DbSubnetGroup
      Tags:
        - Key: Name
          Value: Database
      StorageType: gp2
      MultiAZ: 'false'
    DeletionPolicy: Snapshot
  DbParamGroup:
    Type: 'AWS::RDS::DBParameterGroup'
    Properties:
      Description: ECS App Base Database Parameters
      Family: mariadb10.1
      Parameters: {}
  Utility:
    Type: 'AWS::S3::Bucket'
    Properties: {}
    DeletionPolicy: Retain
  EcsServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: ecs-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'elasticloadbalancing:DeregisterInstancesFromLoadBalancer'
                  - 'elasticloadbalancing:DeregisterTargets'
                  - 'elasticloadbalancing:Describe*'
                  - 'elasticloadbalancing:RegisterInstancesWithLoadBalancer'
                  - 'elasticloadbalancing:RegisterTargets'
                  - 'ec2:Describe*'
                  - 'ec2:AuthorizeSecurityGroupIngress'
                Resource: '*'
  WebServerPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: '*'
            Resource:
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref Utility
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref Utility
                  - /*
      Roles:
        - !Ref TaskRole
      Users:
        - !Ref WpUserServiceAccount
  WpUserServiceAccount:
    Type: 'AWS::IAM::User'
    Properties:
      Path: /platforms/ecs-app-abase/
Outputs:
  DatabaseEndpointAddress:
    Description: DB
    Value: !GetAtt 
      - Database
      - Endpoint.Address
