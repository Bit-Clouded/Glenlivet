{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Parameters" : {
        "EcsCluster": {
            "Type": "String",
            "Description": "[ecs-base.resources.EcsCluster]"
        },
		"ElbSg" : {
			"Description": "Elb Security Group. [vpc.resources.ElbSecGroup]",
            "Type": "String"
		},
		"HttpSg" : {
			"Description": "Elb Target Security Group. [vpc.resources.HttpNsSecGroup]",
            "Type": "String"
		},
        "ElbSubnets" : {
            "Description" : "VPCid associated with the subnets. [ecs-base.parameters.ElbSubnets]",
            "Type": "List<AWS::EC2::Subnet::Id>"
        }
    },

    "Resources" : {
        "HttpGateway" : {
            "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties" : {
                "Subnets" : { "Ref" : "ElbSubnets" },
                "Listeners" : [{
                    "LoadBalancerPort" : "80",
                    "InstancePort" : "80",
                    "Protocol" : "HTTP"
                }],
                "HealthCheck" : {
                    "Target" : "HTTP:80/",
                    "HealthyThreshold" : "2",
                    "UnhealthyThreshold" : "10",
                    "Interval" : "30",
                    "Timeout" : "5"
                },
                "SecurityGroups" : [
                    { "Ref": "ElbSg" },
                    { "Ref": "HttpSg" }
                ]
            }
        },
        "TaskDef": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties" : {
                "ContainerDefinitions" : [{
                    "Name": "simple-app",
                    "Cpu": "10",
                    "Essential": "true",
                    "Image":"httpd:2.4",
                    "Memory":"300",
                    "MountPoints": [{
                        "ContainerPath": "/usr/local/apache2/htdocs",
                        "SourceVolume": "my-vol"
                    }],
                    "PortMappings": [
                        { "HostPort": 80, "ContainerPort": 80 }
                    ]
                },{
                    "Name": "busybox",
                    "Cpu": 10,
                    "Command": [
                        "/bin/sh -c \"while true; do echo '<html> <head> <title>Amazon ECS Sample App</title> <style>body {margin-top: 40px; background-color: #333;} </style> </head><body> <div style=color:white;text-align:center> <h1>Amazon ECS Sample App</h1> <h2>Congratulations!</h2> <p>Your application is now running on a container in Amazon ECS.</p>' > top; /bin/date > date ; echo '</div></body></html>' > bottom; cat top date bottom > /usr/local/apache2/htdocs/index.html ; sleep 1; done\""
                    ],      
                    "EntryPoint": [ "sh", "-c"],
                    "Essential": false,
                    "Image": "busybox",
                    "Memory": 200,
                    "VolumesFrom": [
                        { "SourceContainer": "simple-app" }
                    ]
                }],
                "Volumes": [
                    { "Name": "my-vol" }
                ]
            }
        },    

        "EcsService": {
            "Type": "AWS::ECS::Service",
            "Properties" : {
                "Cluster": {"Ref": "EcsCluster"},
                "DesiredCount": "1",
                "Role" : {"Ref":"EcsServiceRole"},
                "LoadBalancers": [{
                    "ContainerName": "simple-app",
                    "ContainerPort": "80",
                    "LoadBalancerName" : { "Ref" : "HttpGateway" }
                }],
                "TaskDefinition" : {"Ref":"TaskDef"}
            }
        },    
        "EcsServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": { "Service": ["ecs.amazonaws.com"] },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Path": "/platforms/ecs/",
                "Policies": [{
                    "PolicyName": "ecs-service",
                    "PolicyDocument": {
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "elasticloadbalancing:Describe*",
                                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                "ec2:Describe*",
                                "ec2:AuthorizeSecurityGroupIngress"
                            ],
                            "Resource": "*"
                        }]
                    }
                }]
            }
        }
    },

    "Outputs" : {
        "Service": {
            "Value": { "Fn::Join": ["", [
                "https://", { "Ref": "AWS::Region"}, ".console.aws.amazon.com/ecs/home?region=",
                    { "Ref": "AWS::Region"}, "#/clusters/", { "Ref": "EcsCluster"},
                    "/services/", { "Fn::GetAtt": ["EcsService", "Name"] }, "/tasks"
            ]] }
        }
    }
}