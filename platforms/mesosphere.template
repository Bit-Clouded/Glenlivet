AWSTemplateFormatVersion: 2010-09-09
Description: DC/OS AWS CloudFormation Template
Metadata:
  DefaultName: Mesosphere
  Dependencies:
    - TemplatePath: networking/vpc
      Resources: {}
    - TemplatePath: networking/elb-subnets
      Parameters:
        VpcId: VpcId
      Outputs:
        ElbSubnets: ElbSubnets
        WebServerSubnets: WebServerSubnets
      NestedDependency: networking/vpc.template
    - TemplatePath: analytics/logs-store
      Resources:
        AccessLogBucket: Raw
        CwlPolicy: LinuxLogPolicy
      Outputs:
        CwlLinuxParams: LxDockerLogParams
        CwlDockerParams: DockerCwlParams
Conditions:
  HasNoKeypair: !Equals 
    - !Ref KeyPairName
    - ''
Parameters:
  VpcId:
    Description: 'VPCid associated with the subnets. [elb-subnets.parameters.VpcId]'
    Type: 'AWS::EC2::VPC::Id'
  ElbSubnets:
    Description: 'Subnet to run HA web cluster on. [elb-subnets.outputs.ElbSubnets]'
    Type: 'List<AWS::EC2::Subnet::Id>'
  WebServerSubnets:
    Description: 'Subnet to run HA web cluster on. [elb-subnets.outputs.WebServerSubnets]'
    Type: 'List<AWS::EC2::Subnet::Id>'
  SlaveInstanceCount:
    Description: 'Required: Specify the number of private agent nodes or accept the default.'
    Default: '2'
    Type: Number
  KeyPairName:
    Description: 'Required: Specify your AWS EC2 Key Pair.'
    Type: String
    Default: ''
  CoreOsAmiId:
    Description: AMI Id for CoreOS
    Type: 'AWS::EC2::Image::Id'
  OAuthEnabled:
    Description: Enable OAuth authentication
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Type: String
  PublicSlaveInstanceCount:
    Description: 'Required: Specify the number of public agent nodes or accept the default.'
    Default: '1'
    Type: Number
  AdminLocation:
    ConstraintDescription: must be a valid CIDR.
    Description: >-
      Optional: Specify the IP range to whitelist for access to the admin zone.
      Must be a valid CIDR.
    AllowedPattern: '^([0-9]+\.){3}[0-9]+\/[0-9]+$'
    Default: 0.0.0.0/0
    Type: String
    MinLength: '9'
    MaxLength: '18'
  CwlLinuxParams:
    Description: >-
      Environment variables for syslog and authlog cwl group names
      [logs-store.outputs.LxDockerLogParams]
    Type: String
  CwlDockerParams:
    Description: 'Docker log driver params [logs-store.outputs.DockerCwlParams]'
    Type: String
  CwlPolicy:
    Description: 'Managed policy for linux logging. [logs-store.resources.LinuxLogPolicy]'
    Type: String
  AccessLogBucket:
    Description: 'Image id of the frontend [logs-store.resources.Raw]'
    Type: String
Mappings:
  Parameters:
    PublicSlaveInstanceType:
      default: m4.large
    MasterInstanceType:
      default: m4.large
    SlaveInstanceType:
      default: m4.large
    StackCreationTimeout:
      default: PT45M
Resources:
  AdminSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref AdminLocation
          IpProtocol: tcp
        - FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref AdminLocation
          IpProtocol: tcp
        - FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref AdminLocation
          IpProtocol: tcp
      GroupDescription: Enable admin access to servers
  ElasticLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      SecurityGroups:
        - !Ref LbSecurityGroup
        - !Ref AdminSecurityGroup
      HealthCheck:
        Interval: '30'
        Target: 'TCP:5050'
        Timeout: '5'
        UnhealthyThreshold: '2'
        HealthyThreshold: '2'
      Listeners:
        - Protocol: TCP
          LoadBalancerPort: '80'
          InstancePort: '80'
          InstanceProtocol: TCP
        - Protocol: TCP
          LoadBalancerPort: '443'
          InstancePort: '443'
          InstanceProtocol: TCP
      Subnets: !Ref ElbSubnets
  ExhibitorS3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
  InternalMasterLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      SecurityGroups:
        - !Ref LbSecurityGroup
        - !Ref AdminSecurityGroup
        - !Ref SlaveSecurityGroup
        - !Ref PublicSlaveSecurityGroup
        - !Ref MasterSecurityGroup
      HealthCheck:
        Interval: '30'
        Target: 'TCP:5050'
        Timeout: '5'
        UnhealthyThreshold: '2'
        HealthyThreshold: '2'
      Scheme: internal
      Listeners:
        - Protocol: HTTP
          LoadBalancerPort: '5050'
          InstancePort: '5050'
          InstanceProtocol: HTTP
        - Protocol: TCP
          LoadBalancerPort: '2181'
          InstancePort: '2181'
          InstanceProtocol: TCP
        - Protocol: HTTP
          LoadBalancerPort: '8181'
          InstancePort: '8181'
          InstanceProtocol: HTTP
        - Protocol: TCP
          LoadBalancerPort: '80'
          InstancePort: '80'
          InstanceProtocol: TCP
        - Protocol: TCP
          LoadBalancerPort: '443'
          InstancePort: '443'
          InstanceProtocol: TCP
        - Protocol: HTTP
          LoadBalancerPort: '8080'
          InstancePort: '8080'
          InstanceProtocol: HTTP
      Subnets: !Ref ElbSubnets
  LbSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Mesos Master LB
  MasterInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref MasterRole
      Path: /platforms/mesosphere/
  MasterLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      SecurityGroups:
        - !Ref MasterSecurityGroup
        - !Ref AdminSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sdb
          VirtualName: ephemeral0
      ImageId: !Ref CoreOsAmiId
      InstanceType: !FindInMap 
        - Parameters
        - MasterInstanceType
        - default
      KeyName: !If 
        - HasNoKeypair
        - !Ref 'AWS::NoValue'
        - !Ref KeyPairName
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #cloud-config
            - |
              "coreos":
            - |2
                "units":
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Formats the /var/lib ephemeral drive
            - |2
                    Before=var-lib.mount dbus.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    RemainAfterExit=yes
            - |2
                    ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)"
            - |2
                  "name": |-
            - |2
                    format-var-lib-ephemeral.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Mount /var/lib
            - |2
                    Before=dbus.service
            - |2
                    [Mount]
            - |2
                    What=/dev/xvdb
            - |2
                    Where=/var/lib
            - |2
                    Type=ext4
            - |2
                  "name": |-
            - |2
                    var-lib.mount
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    etcd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    update-engine.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    locksmithd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "name": |-
            - |2
                    systemd-resolved.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    systemd-journald.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    docker.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Before=dcos.target
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /etc/profile.d
            - |2
                    ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh
            - |2
                  "name": |-
            - |2
                    dcos-link-env.service
            - |2
                - "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Download DC/OS to this host.
            - |2
                    After=network-online.target
            - |2
                    Wants=network-online.target
            - |2
                    ConditionPathExists=!/opt/mesosphere/
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/bootstrap/995fa9bd946020901e2e57d8cefe89925fc90a71.bootstrap.tar.xz
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere
            - |2
                    ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere
            - |2
                    ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz
            - |2
                  "name": |-
            - |2
                    dcos-download.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Specialize DC/OS for this host.
            - |2
                    Requires=dcos-download.service
            - |2
                    After=dcos-download.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd
            - |2
                    [Install]
            - |2
                    WantedBy=multi-user.target
            - |2
                  "enable": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    dcos-setup.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |-
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Signal CloudFormation Success
            - |2
                    ConditionPathExists=!/var/lib/dcos-cfn-signal
            - |2
                    [Service]
            - |2
                    Type=simple
            - |2
                    Restart=on-failure
            - |2
                    StartLimitInterval=0
            - |2
                    RestartSec=15s
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata
            - |2
                    Environment="AWS_CFN_SIGNAL_THIS_RESOURCE=MasterServerGroup"
            - |2
                    ExecStartPre=/bin/ping -c1 leader.mesos
            - |2
                    ExecStartPre=/opt/mesosphere/bin/cfn-signal
            - |2
                    ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal
            - |2
                  "name": |-
            - |2
                    dcos-cfn-signal.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                "update":
            - |2
                  "reboot-strategy": |-
            - |2
                    off
            - |
              "write_files":
            - |
              - "content": |
            - |2
                  https://downloads.dcos.io/dcos/stable
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/repository-url
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  ["dcos-config--setup_81829809236553d9f9f32ea8e0877a12b42369c5", "dcos-metadata--setup_81829809236553d9f9f32ea8e0877a12b42369c5"]
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/cluster-packages.json
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  [Journal]
            - |2
                  MaxLevelConsole=warning
            - |2
                  RateLimitInterval=1s
            - |2
                  RateLimitBurst=20000
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/systemd/journald.conf.d/dcos.conf
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  rexray:
            - |2
                    loglevel: info
            - |2
                    modules:
            - |2
                      default-admin:
            - |2
                        host: tcp://127.0.0.1:61003
            - |2
                    storageDrivers:
            - |2
                    - ec2
            - |2
                    volume:
            - |2
                      unmount:
            - |2
                        ignoreusedcount: true
            - |2
                "path": |-
            - |2
                  /etc/rexray/config.yml
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - '    MESOS_CLUSTER='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider
            - |
              - "content": |
            - '    ADMINROUTER_ACTIVATE_AUTH_MODULE='
            - !Ref OAuthEnabled
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/adminrouter.env
            - |
              - "content": |
            - |2
                  MASTER_SOURCE=exhibitor_uri
            - '    EXHIBITOR_URI=http://'
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ':8181/exhibitor/v1/cluster/status'
            - |+

            - '    EXHIBITOR_ADDRESS='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                  RESOLVERS=169.254.169.253
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config
            - |
              - "content": |
            - |2
                  EXHIBITOR_BACKEND=AWS_S3
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_S3_BUCKET='
            - !Ref ExhibitorS3Bucket
            - ''
            - |+

            - '    AWS_S3_PREFIX='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor
            - |
              - "content": |
            - |2
                  {"uiConfiguration":{"plugins":{"banner":{"enabled":false,"backgroundColor":"#1E232F","foregroundColor":"#FFFFFF","headerTitle":null,"headerContent":null,"footerContent":null,"imagePath":null,"dismissible":null},"branding":{"enabled":false},"external-links": {"enabled": false},
            - |+

            - |2
                  "authentication":{"enabled":false},
            - |+

            - '    "oauth":{"enabled":'
            - !Ref OAuthEnabled
            - ',"authHost":"https://dcos.auth0.com"},'
            - |+

            - |+

            - |+

            - |2
                  "tracking":{"enabled":true}}}}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/ui-config.json
            - |
              - "content": |
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_STACK_ID='
            - !Ref 'AWS::StackId'
            - ''
            - |+

            - '    AWS_STACK_NAME='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - '    AWS_IAM_MASTER_ROLE_NAME='
            - !Ref MasterRole
            - ''
            - |+

            - '    AWS_IAM_SLAVE_ROLE_NAME='
            - !Ref SlaveRole
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/cfn_signal_metadata
            - |
              - "content": |
            - '    INTERNAL_MASTER_LB_DNSNAME='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - '    MASTER_LB_DNSNAME='
            - !GetAtt 
              - ElasticLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/aws_dnsnames
            - |
              - "content": |-
            - |2
                  {}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/master
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/aws_master
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/aws
      IamInstanceProfile: !Ref MasterInstanceProfile
  MasterRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /platforms/mesosphere/
      Policies:
        - PolicyDocument:
            Statement:
              - Resource:
                  - !Join 
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref ExhibitorS3Bucket
                      - /*
                  - !Join 
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref ExhibitorS3Bucket
                Effect: Allow
                Action:
                  - 's3:AbortMultipartUpload'
                  - 's3:DeleteObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketPolicy'
                  - 's3:GetObject'
                  - 's3:GetObjectAcl'
                  - 's3:ListBucket'
                  - 's3:ListBucketMultipartUploads'
                  - 's3:ListMultipartUploadParts'
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
              - Resource:
                  - !Ref 'AWS::StackId'
                  - !Join 
                    - ''
                    - - !Ref 'AWS::StackId'
                      - /*
                Effect: Allow
                Action:
                  - 'cloudformation:*'
              - Resource: '*'
                Effect: Allow
                Action:
                  - 'ec2:DescribeKeyPairs'
                  - 'ec2:DescribeSubnets'
                  - 'autoscaling:DescribeLaunchConfigurations'
                  - 'autoscaling:UpdateAutoScalingGroup'
                  - 'autoscaling:DescribeAutoScalingGroups'
                  - 'autoscaling:DescribeScalingActivities'
                  - 'elasticloadbalancing:DescribeLoadBalancers'
            Version: 2012-10-17
          PolicyName: root
      AssumeRolePolicyDocument:
        Statement:
          - Principal:
              Service:
                - ec2.amazonaws.com
            Effect: Allow
            Action:
              - 'sts:AssumeRole'
        Version: 2012-10-17
  MasterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - FromPort: '5050'
          ToPort: '5050'
          SourceSecurityGroupId: !Ref LbSecurityGroup
          IpProtocol: tcp
        - FromPort: '80'
          ToPort: '80'
          SourceSecurityGroupId: !Ref LbSecurityGroup
          IpProtocol: tcp
        - FromPort: '443'
          ToPort: '443'
          SourceSecurityGroupId: !Ref LbSecurityGroup
          IpProtocol: tcp
        - FromPort: '8080'
          ToPort: '8080'
          SourceSecurityGroupId: !Ref LbSecurityGroup
          IpProtocol: tcp
        - FromPort: '8181'
          ToPort: '8181'
          SourceSecurityGroupId: !Ref LbSecurityGroup
          IpProtocol: tcp
        - FromPort: '2181'
          ToPort: '2181'
          SourceSecurityGroupId: !Ref LbSecurityGroup
          IpProtocol: tcp
      GroupDescription: Mesos Masters
  MasterServerGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      DesiredCapacity: 3
      MaxSize: 3
      Tags:
        - PropagateAtLaunch: 'true'
          Key: role
          Value: mesos-master
      LaunchConfigurationName: !Ref MasterLaunchConfig
      LoadBalancerNames:
        - !Ref ElasticLoadBalancer
        - !Ref InternalMasterLoadBalancer
      VPCZoneIdentifier: !Ref WebServerSubnets
      MinSize: 3
    CreationPolicy:
      ResourceSignal:
        Timeout: !FindInMap 
          - Parameters
          - StackCreationTimeout
          - default
        Count: 3
  MasterToMasterIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '0'
      GroupId: !Ref MasterSecurityGroup
      SourceSecurityGroupId: !Ref MasterSecurityGroup
      IpProtocol: '-1'
      ToPort: '65535'
  MasterToPublicSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '0'
      GroupId: !Ref PublicSlaveSecurityGroup
      SourceSecurityGroupId: !Ref MasterSecurityGroup
      IpProtocol: '-1'
      ToPort: '65535'
  MasterToSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '0'
      GroupId: !Ref SlaveSecurityGroup
      SourceSecurityGroupId: !Ref MasterSecurityGroup
      IpProtocol: '-1'
      ToPort: '65535'
  PublicSlaveIngressFive:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '23'
      GroupId: !Ref PublicSlaveSecurityGroup
      CidrIp: 0.0.0.0/0
      IpProtocol: udp
      ToPort: '5050'
  PublicSlaveIngressFour:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '0'
      GroupId: !Ref PublicSlaveSecurityGroup
      CidrIp: 0.0.0.0/0
      IpProtocol: udp
      ToPort: '21'
  PublicSlaveIngressOne:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '0'
      GroupId: !Ref PublicSlaveSecurityGroup
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      ToPort: '21'
  PublicSlaveIngressSix:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '5052'
      GroupId: !Ref PublicSlaveSecurityGroup
      CidrIp: 0.0.0.0/0
      IpProtocol: udp
      ToPort: '32000'
  PublicSlaveIngressThree:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '5052'
      GroupId: !Ref PublicSlaveSecurityGroup
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      ToPort: '32000'
  PublicSlaveIngressTwo:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '23'
      GroupId: !Ref PublicSlaveSecurityGroup
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      ToPort: '5050'
  PublicSlaveLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      SecurityGroups:
        - !Ref PublicSlaveSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sdb
          VirtualName: ephemeral0
      ImageId: !Ref CoreOsAmiId
      InstanceType: !FindInMap 
        - Parameters
        - PublicSlaveInstanceType
        - default
      KeyName: !If 
        - HasNoKeypair
        - !Ref 'AWS::NoValue'
        - !Ref KeyPairName
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #cloud-config
            - |
              "coreos":
            - |2
                "units":
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Formats the /var/lib ephemeral drive
            - |2
                    Before=var-lib.mount dbus.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    RemainAfterExit=yes
            - |2
                    ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)"
            - |2
                  "name": |-
            - |2
                    format-var-lib-ephemeral.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Mount /var/lib
            - |2
                    Before=dbus.service
            - |2
                    [Mount]
            - |2
                    What=/dev/xvdb
            - |2
                    Where=/var/lib
            - |2
                    Type=ext4
            - |2
                  "name": |-
            - |2
                    var-lib.mount
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    etcd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    update-engine.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    locksmithd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "name": |-
            - |2
                    systemd-resolved.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    systemd-journald.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    docker.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Before=dcos.target
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /etc/profile.d
            - |2
                    ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh
            - |2
                  "name": |-
            - |2
                    dcos-link-env.service
            - |2
                - "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Download DC/OS to this host.
            - |2
                    After=network-online.target
            - |2
                    Wants=network-online.target
            - |2
                    ConditionPathExists=!/opt/mesosphere/
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/bootstrap/995fa9bd946020901e2e57d8cefe89925fc90a71.bootstrap.tar.xz
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere
            - |2
                    ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere
            - |2
                    ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz
            - |2
                  "name": |-
            - |2
                    dcos-download.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Specialize DC/OS for this host.
            - |2
                    Requires=dcos-download.service
            - |2
                    After=dcos-download.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd
            - |2
                    [Install]
            - |2
                    WantedBy=multi-user.target
            - |2
                  "enable": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    dcos-setup.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |-
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Signal CloudFormation Success
            - |2
                    ConditionPathExists=!/var/lib/dcos-cfn-signal
            - |2
                    [Service]
            - |2
                    Type=simple
            - |2
                    Restart=on-failure
            - |2
                    StartLimitInterval=0
            - |2
                    RestartSec=15s
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata
            - |2
                    Environment="AWS_CFN_SIGNAL_THIS_RESOURCE=PublicSlaveServerGroup"
            - |2
                    ExecStartPre=/bin/ping -c1 leader.mesos
            - |2
                    ExecStartPre=/opt/mesosphere/bin/cfn-signal
            - |2
                    ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal
            - |2
                  "name": |-
            - |2
                    dcos-cfn-signal.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                "update":
            - |2
                  "reboot-strategy": |-
            - |2
                    off
            - |
              "write_files":
            - |
              - "content": |
            - |2
                  https://downloads.dcos.io/dcos/stable
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/repository-url
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  ["dcos-config--setup_81829809236553d9f9f32ea8e0877a12b42369c5", "dcos-metadata--setup_81829809236553d9f9f32ea8e0877a12b42369c5"]
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/cluster-packages.json
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  [Journal]
            - |2
                  MaxLevelConsole=warning
            - |2
                  RateLimitInterval=1s
            - |2
                  RateLimitBurst=20000
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/systemd/journald.conf.d/dcos.conf
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  rexray:
            - |2
                    loglevel: info
            - |2
                    modules:
            - |2
                      default-admin:
            - |2
                        host: tcp://127.0.0.1:61003
            - |2
                    storageDrivers:
            - |2
                    - ec2
            - |2
                    volume:
            - |2
                      unmount:
            - |2
                        ignoreusedcount: true
            - |2
                "path": |-
            - |2
                  /etc/rexray/config.yml
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - '    MESOS_CLUSTER='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider
            - |
              - "content": |
            - '    ADMINROUTER_ACTIVATE_AUTH_MODULE='
            - !Ref OAuthEnabled
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/adminrouter.env
            - |
              - "content": |
            - |2
                  MASTER_SOURCE=exhibitor_uri
            - '    EXHIBITOR_URI=http://'
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ':8181/exhibitor/v1/cluster/status'
            - |+

            - '    EXHIBITOR_ADDRESS='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                  RESOLVERS=169.254.169.253
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config
            - |
              - "content": |
            - |2
                  EXHIBITOR_BACKEND=AWS_S3
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_S3_BUCKET='
            - !Ref ExhibitorS3Bucket
            - ''
            - |+

            - '    AWS_S3_PREFIX='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor
            - |
              - "content": |
            - |2
                  {"uiConfiguration":{"plugins":{"banner":{"enabled":false,"backgroundColor":"#1E232F","foregroundColor":"#FFFFFF","headerTitle":null,"headerContent":null,"footerContent":null,"imagePath":null,"dismissible":null},"branding":{"enabled":false},"external-links": {"enabled": false},
            - |+

            - |2
                  "authentication":{"enabled":false},
            - |+

            - '    "oauth":{"enabled":'
            - !Ref OAuthEnabled
            - ',"authHost":"https://dcos.auth0.com"},'
            - |+

            - |+

            - |+

            - |2
                  "tracking":{"enabled":true}}}}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/ui-config.json
            - |
              - "content": |
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_STACK_ID='
            - !Ref 'AWS::StackId'
            - ''
            - |+

            - '    AWS_STACK_NAME='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - '    AWS_IAM_MASTER_ROLE_NAME='
            - !Ref MasterRole
            - ''
            - |+

            - '    AWS_IAM_SLAVE_ROLE_NAME='
            - !Ref SlaveRole
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/cfn_signal_metadata
            - |
              - "content": |
            - '    INTERNAL_MASTER_LB_DNSNAME='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - '    MASTER_LB_DNSNAME='
            - !GetAtt 
              - ElasticLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/aws_dnsnames
            - |
              - "content": |-
            - |2
                  {}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/slave_public
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/aws
      IamInstanceProfile: !Ref SlaveInstanceProfile
  PublicSlaveLoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      SecurityGroups:
        - !Ref PublicSlaveSecurityGroup
      HealthCheck:
        Interval: '5'
        Target: 'HTTP:9090/_haproxy_health_check'
        Timeout: '2'
        UnhealthyThreshold: '2'
        HealthyThreshold: '2'
      Listeners:
        - Protocol: TCP
          LoadBalancerPort: '80'
          InstancePort: '80'
          InstanceProtocol: TCP
        - Protocol: TCP
          LoadBalancerPort: '443'
          InstancePort: '443'
          InstanceProtocol: TCP
      Subnets: !Ref ElbSubnets
  PublicSlaveSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Mesos Slaves Public
  PublicSlaveServerGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      DesiredCapacity: !Ref PublicSlaveInstanceCount
      MaxSize: !Ref PublicSlaveInstanceCount
      Tags:
        - PropagateAtLaunch: 'true'
          Key: role
          Value: mesos-slave
      LaunchConfigurationName: !Ref PublicSlaveLaunchConfig
      LoadBalancerNames:
        - !Ref PublicSlaveLoadBalancer
      VPCZoneIdentifier: !Ref WebServerSubnets
      MinSize: !Ref PublicSlaveInstanceCount
    CreationPolicy:
      ResourceSignal:
        Timeout: !FindInMap 
          - Parameters
          - StackCreationTimeout
          - default
        Count: !Ref PublicSlaveInstanceCount
  PublicSlaveToMasterIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '0'
      GroupId: !Ref MasterSecurityGroup
      SourceSecurityGroupId: !Ref PublicSlaveSecurityGroup
      IpProtocol: '-1'
      ToPort: '65535'
  PublicSlaveToPublicSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '0'
      GroupId: !Ref PublicSlaveSecurityGroup
      SourceSecurityGroupId: !Ref PublicSlaveSecurityGroup
      IpProtocol: '-1'
      ToPort: '65535'
  PublicSlaveToSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '0'
      GroupId: !Ref SlaveSecurityGroup
      SourceSecurityGroupId: !Ref PublicSlaveSecurityGroup
      IpProtocol: '-1'
      ToPort: '65535'
  SlaveInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - !Ref SlaveRole
      Path: /platforms/mesosphere/
  SlaveLaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      SecurityGroups:
        - !Ref SlaveSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/sdb
          VirtualName: ephemeral0
      ImageId: !Ref CoreOsAmiId
      InstanceType: !FindInMap 
        - Parameters
        - SlaveInstanceType
        - default
      KeyName: !If 
        - HasNoKeypair
        - !Ref 'AWS::NoValue'
        - !Ref KeyPairName
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #cloud-config
            - |
              "coreos":
            - |2
                "units":
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Formats the /var/lib ephemeral drive
            - |2
                    Before=var-lib.mount dbus.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    RemainAfterExit=yes
            - |2
                    ExecStart=/bin/bash -c "(blkid -t TYPE=ext4 | grep xvdb) || (/usr/sbin/mkfs.ext4 -F /dev/xvdb)"
            - |2
                  "name": |-
            - |2
                    format-var-lib-ephemeral.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Mount /var/lib
            - |2
                    Before=dbus.service
            - |2
                    [Mount]
            - |2
                    What=/dev/xvdb
            - |2
                    Where=/var/lib
            - |2
                    Type=ext4
            - |2
                  "name": |-
            - |2
                    var-lib.mount
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    etcd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    update-engine.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "mask": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    locksmithd.service
            - |2
                - "command": |-
            - |2
                    stop
            - |2
                  "name": |-
            - |2
                    systemd-resolved.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    systemd-journald.service
            - |2
                - "command": |-
            - |2
                    restart
            - |2
                  "name": |-
            - |2
                    docker.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Before=dcos.target
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /etc/profile.d
            - |2
                    ExecStart=/usr/bin/ln -sf /opt/mesosphere/environment.export /etc/profile.d/dcos.sh
            - |2
                  "name": |-
            - |2
                    dcos-link-env.service
            - |2
                - "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Download DC/OS to this host.
            - |2
                    After=network-online.target
            - |2
                    Wants=network-online.target
            - |2
                    ConditionPathExists=!/opt/mesosphere/
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    ExecStartPre=/usr/bin/curl --keepalive-time 2 -fLsSv --retry 20 -Y 100000 -y 60 -o /tmp/bootstrap.tar.xz https://downloads.dcos.io/dcos/stable/bootstrap/995fa9bd946020901e2e57d8cefe89925fc90a71.bootstrap.tar.xz
            - |2
                    ExecStartPre=/usr/bin/mkdir -p /opt/mesosphere
            - |2
                    ExecStart=/usr/bin/tar -axf /tmp/bootstrap.tar.xz -C /opt/mesosphere
            - |2
                    ExecStartPost=-/usr/bin/rm -f /tmp/bootstrap.tar.xz
            - |2
                  "name": |-
            - |2
                    dcos-download.service
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |
            - |2
                    [Unit]
            - |2
                    Description=Pkgpanda: Specialize DC/OS for this host.
            - |2
                    Requires=dcos-download.service
            - |2
                    After=dcos-download.service
            - |2
                    [Service]
            - |2
                    Type=oneshot
            - |2
                    StandardOutput=journal+console
            - |2
                    StandardError=journal+console
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    ExecStart=/opt/mesosphere/bin/pkgpanda setup --no-block-systemd
            - |2
                    [Install]
            - |2
                    WantedBy=multi-user.target
            - |2
                  "enable": !!bool |-
            - |2
                    true
            - |2
                  "name": |-
            - |2
                    dcos-setup.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                - "command": |-
            - |2
                    start
            - |2
                  "content": |-
            - |2
                    [Unit]
            - |2
                    Description=AWS Setup: Signal CloudFormation Success
            - |2
                    ConditionPathExists=!/var/lib/dcos-cfn-signal
            - |2
                    [Service]
            - |2
                    Type=simple
            - |2
                    Restart=on-failure
            - |2
                    StartLimitInterval=0
            - |2
                    RestartSec=15s
            - |2
                    EnvironmentFile=/opt/mesosphere/environment
            - |2
                    EnvironmentFile=/opt/mesosphere/etc/cfn_signal_metadata
            - |2
                    Environment="AWS_CFN_SIGNAL_THIS_RESOURCE=SlaveServerGroup"
            - |2
                    ExecStartPre=/bin/ping -c1 leader.mesos
            - |2
                    ExecStartPre=/opt/mesosphere/bin/cfn-signal
            - |2
                    ExecStart=/usr/bin/touch /var/lib/dcos-cfn-signal
            - |2
                  "name": |-
            - |2
                    dcos-cfn-signal.service
            - |2
                  "no_block": !!bool |-
            - |2
                    true
            - |2
                "update":
            - |2
                  "reboot-strategy": |-
            - |2
                    off
            - |
              "write_files":
            - |
              - "content": |
            - |2
                  https://downloads.dcos.io/dcos/stable
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/repository-url
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  ["dcos-config--setup_81829809236553d9f9f32ea8e0877a12b42369c5", "dcos-metadata--setup_81829809236553d9f9f32ea8e0877a12b42369c5"]
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-flags/cluster-packages.json
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  [Journal]
            - |2
                  MaxLevelConsole=warning
            - |2
                  RateLimitInterval=1s
            - |2
                  RateLimitBurst=20000
            - |2
                "owner": |-
            - |2
                  root
            - |2
                "path": |-
            - |2
                  /etc/systemd/journald.conf.d/dcos.conf
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - |2
                  rexray:
            - |2
                    loglevel: info
            - |2
                    modules:
            - |2
                      default-admin:
            - |2
                        host: tcp://127.0.0.1:61003
            - |2
                    storageDrivers:
            - |2
                    - ec2
            - |2
                    volume:
            - |2
                      unmount:
            - |2
                        ignoreusedcount: true
            - |2
                "path": |-
            - |2
                  /etc/rexray/config.yml
            - |2
                "permissions": |-
            - |2
                  0644
            - |
              - "content": |
            - '    MESOS_CLUSTER='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/mesos-master-provider
            - |
              - "content": |
            - '    ADMINROUTER_ACTIVATE_AUTH_MODULE='
            - !Ref OAuthEnabled
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/adminrouter.env
            - |
              - "content": |
            - |2
                  MASTER_SOURCE=exhibitor_uri
            - '    EXHIBITOR_URI=http://'
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ':8181/exhibitor/v1/cluster/status'
            - |+

            - '    EXHIBITOR_ADDRESS='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                  RESOLVERS=169.254.169.253
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/dns_config
            - |
              - "content": |
            - |2
                  EXHIBITOR_BACKEND=AWS_S3
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_S3_BUCKET='
            - !Ref ExhibitorS3Bucket
            - ''
            - |+

            - '    AWS_S3_PREFIX='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/exhibitor
            - |
              - "content": |
            - |2
                  {"uiConfiguration":{"plugins":{"banner":{"enabled":false,"backgroundColor":"#1E232F","foregroundColor":"#FFFFFF","headerTitle":null,"headerContent":null,"footerContent":null,"imagePath":null,"dismissible":null},"branding":{"enabled":false},"external-links": {"enabled": false},
            - |+

            - |2
                  "authentication":{"enabled":false},
            - |+

            - '    "oauth":{"enabled":'
            - !Ref OAuthEnabled
            - ',"authHost":"https://dcos.auth0.com"},'
            - |+

            - |+

            - |+

            - |2
                  "tracking":{"enabled":true}}}}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/ui-config.json
            - |
              - "content": |
            - '    AWS_REGION='
            - !Ref 'AWS::Region'
            - ''
            - |+

            - '    AWS_STACK_ID='
            - !Ref 'AWS::StackId'
            - ''
            - |+

            - '    AWS_STACK_NAME='
            - !Ref 'AWS::StackName'
            - ''
            - |+

            - '    AWS_IAM_MASTER_ROLE_NAME='
            - !Ref MasterRole
            - ''
            - |+

            - '    AWS_IAM_SLAVE_ROLE_NAME='
            - !Ref SlaveRole
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/cfn_signal_metadata
            - |
              - "content": |
            - '    INTERNAL_MASTER_LB_DNSNAME='
            - !GetAtt 
              - InternalMasterLoadBalancer
              - DNSName
            - ''
            - |+

            - '    MASTER_LB_DNSNAME='
            - !GetAtt 
              - ElasticLoadBalancer
              - DNSName
            - ''
            - |+

            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/etc/aws_dnsnames
            - |
              - "content": |-
            - |2
                  {}
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/setup-packages/dcos-provider-aws--setup/pkginfo.json
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/slave
            - |
              - "content": ""
            - |2
                "path": |-
            - |2
                  /etc/mesosphere/roles/aws
      IamInstanceProfile: !Ref SlaveInstanceProfile
  SlaveRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Policies:
        - PolicyDocument:
            Statement:
              - Resource:
                  - !Ref 'AWS::StackId'
                  - !Join 
                    - ''
                    - - !Ref 'AWS::StackId'
                      - /*
                Effect: Allow
                Action:
                  - 'cloudformation:*'
              - Resource: '*'
                Effect: Allow
                Action:
                  - 'ec2:CreateTags'
                  - 'ec2:DescribeInstances'
                  - 'ec2:CreateVolume'
                  - 'ec2:DeleteVolume'
                  - 'ec2:AttachVolume'
                  - 'ec2:DetachVolume'
                  - 'ec2:DescribeVolumes'
                  - 'ec2:DescribeVolumeStatus'
                  - 'ec2:DescribeVolumeAttribute'
                  - 'ec2:CreateSnapshot'
                  - 'ec2:CopySnapshot'
                  - 'ec2:DeleteSnapshot'
                  - 'ec2:DescribeSnapshots'
                  - 'ec2:DescribeSnapshotAttribute'
                  - 'autoscaling:DescribeAutoScalingGroups'
                  - 'cloudwatch:PutMetricData'
            Version: 2012-10-17
          PolicyName: Slaves
      AssumeRolePolicyDocument:
        Statement:
          - Principal:
              Service:
                - ec2.amazonaws.com
            Effect: Allow
            Action:
              - 'sts:AssumeRole'
        Version: 2012-10-17
  SlaveSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Mesos Slaves
  SlaveServerGroup:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      DesiredCapacity: !Ref SlaveInstanceCount
      MaxSize: !Ref SlaveInstanceCount
      LaunchConfigurationName: !Ref SlaveLaunchConfig
      Tags:
        - PropagateAtLaunch: 'true'
          Key: role
          Value: mesos-slave
      VPCZoneIdentifier: !Ref WebServerSubnets
      MinSize: !Ref SlaveInstanceCount
    CreationPolicy:
      ResourceSignal:
        Timeout: !FindInMap 
          - Parameters
          - StackCreationTimeout
          - default
        Count: !Ref SlaveInstanceCount
  SlaveToMasterIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '0'
      GroupId: !Ref MasterSecurityGroup
      SourceSecurityGroupId: !Ref SlaveSecurityGroup
      IpProtocol: '-1'
      ToPort: '65535'
  SlaveToMasterLBIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '2181'
      GroupId: !Ref LbSecurityGroup
      SourceSecurityGroupId: !Ref SlaveSecurityGroup
      IpProtocol: tcp
      ToPort: '2181'
  SlaveToPublicSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '0'
      GroupId: !Ref PublicSlaveSecurityGroup
      SourceSecurityGroupId: !Ref SlaveSecurityGroup
      IpProtocol: '-1'
      ToPort: '65535'
  SlaveToSlaveIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      FromPort: '0'
      GroupId: !Ref SlaveSecurityGroup
      SourceSecurityGroupId: !Ref SlaveSecurityGroup
      IpProtocol: '-1'
      ToPort: '65535'
Outputs:
  ExhibitorS3Bucket:
    Description: Exhibitor S3 bucket name
    Value: !Ref ExhibitorS3Bucket
  PublicSlaveDnsAddress:
    Description: Public slaves
    Value: !GetAtt 
      - PublicSlaveLoadBalancer
      - DNSName
  DnsAddress:
    Description: Mesos Master
    Value: !GetAtt 
      - ElasticLoadBalancer
      - DNSName
