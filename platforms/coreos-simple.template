{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CoreOS on EC2: http://coreos.com/docs/running-coreos/cloud-providers/ec2/",
    "Parameters": {
        "InstanceType" : {
            "Description" : "EC2 HVM instance type (m3.medium, etc).",
            "Type" : "String",
            "Default" : "t2.micro",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.medium",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge"
            ],
            "ConstraintDescription" : "Must be a valid EC2 HVM instance type."
        },
        "ClusterSize": {
            "Default": "3",
            "MinValue": "3",
            "MaxValue": "12",
            "Description": "Number of nodes in cluster (3-12).",
            "Type": "Number"
        },
        "DiscoveryURL": {
            "Description": "An unique etcd cluster discovery URL. Grab a new token from https://discovery.etcd.io/new?size=<your cluster size>",
            "Type": "String"
        },
        "AdvertisedIpAddress": {
            "Description": "Use 'private' if your etcd cluster is within one region or 'public' if it spans regions or cloud providers.",
            "Default": "private",
            "AllowedValues": ["private", "public"],
            "Type": "String"
        },
        "KeyPairName" : {
            "Description" : "The name of an EC2 Key Pair to allow SSH access to the instance.",
            "Type" : "String",
            "Default": ""
        },
        "CoreOsAmiId" : {
            "Description": "AMI Id for CoreOs",
            "Type": "AWS::EC2::Image::Id"
        },
        "SshGatewayScheme" : {
            "Description" : "Determines whether SSH gateway is public facing or internal facing",
            "AllowedValues" : ["internet-facing", "internal"],
            "Default" : "internal",
            "Type" : "String"
        },
        "VpcId": {
            "Description" : "VPCid associated with the subnets. [elb-subnets.parameters.VpcId]",
            "Type": "AWS::EC2::VPC::Id"
        },
        "ElbSubnets" : {
            "Description" : "VPCid associated with the subnets. [elb-subnets.outputs.ElbSubnets]",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "ServerSubnets" : {
            "Description" : "VPCid associated with the subnets. [elb-subnets.outputs.WebServerSubnets]",
            "Type": "List<AWS::EC2::Subnet::Id>"
        }
    },
    "Conditions" : {
        "HasNoKeypair" : { "Fn::Equals" : [{"Ref" : "KeyPairName"}, ""]}
    },
    "Resources": {
        "SshGateway": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "SecurityGroups": [
                    { "Ref": "SshGatewayGroup" }
                ],
                "Scheme" : { "Ref": "SshGatewayScheme" },
                "HealthCheck": {
                    "Interval": "30",
                    "Target": "TCP:22",
                    "Timeout": "5",
                    "UnhealthyThreshold": "2",
                    "HealthyThreshold": "2"
                },
                "Listeners": [{
                    "Protocol": "TCP",
                    "LoadBalancerPort": "22",
                    "InstancePort": "22",
                    "InstanceProtocol": "TCP"
                }],
                "Subnets": { "Ref": "ElbSubnets" },
                "ConnectionSettings": { "IdleTimeout" : "3600" }
            }
        },
        "SshGatewayGroup" : {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "CoreOs Cluster SSH Gateway",
                "VpcId": { "Ref": "VpcId" },
                "SecurityGroupIngress": [{
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp" : "0.0.0.0/0",
                    "IpProtocol": "tcp"
                }]
            }
        },

        "CoreOsSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "CoreOS SecurityGroup",
                "VpcId": { "Ref": "VpcId" },
                "SecurityGroupIngress": [{
                    "FromPort": "22",
                    "ToPort": "22",
                    "SourceSecurityGroupId": { "Ref": "SshGatewayGroup" },
                    "IpProtocol": "tcp"
                }]
            }
        },
        "Ingress4001": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {"Ref": "CoreOsSecurityGroup"},
                "IpProtocol": "tcp",
                "FromPort": "4001",
                "ToPort": "4001",
                "SourceSecurityGroupId": { "Ref" :  "CoreOsSecurityGroup" }
            }
        },
        "Ingress2379": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {"Ref": "CoreOsSecurityGroup"},
                "IpProtocol": "tcp",
                "FromPort": "2379",
                "ToPort": "2379",
                "SourceSecurityGroupId": { "Ref" :  "CoreOsSecurityGroup" }
            }
        },
        "Ingress2380": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {"Ref": "CoreOsSecurityGroup"},
                "IpProtocol": "tcp",
                "FromPort": "2380",
                "ToPort": "2380",
                "SourceSecurityGroupId": { "Ref" :  "CoreOsSecurityGroup" }
            }
        },
        "CoreOSServerAutoScale": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "VPCZoneIdentifier" : {"Ref":"ServerSubnets"},
                "LaunchConfigurationName": {"Ref": "CoreOSServerLaunchConfig"},
                "MinSize": "3",
                "MaxSize": "12",
                "DesiredCapacity": {"Ref": "ClusterSize"},
                "LoadBalancerNames": [
                    { "Ref": "SshGateway" }
                ],
                "Tags": [
                    {"Key": "Name", "Value": "CoreOS", "PropagateAtLaunch": true}
                ]
            }
        },
        "CoreOSServerLaunchConfig": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Properties": {
                "ImageId" : { "Ref": "CoreOsAmiId" },
                "InstanceType": {"Ref": "InstanceType"},
                "KeyName": {"Fn::If": [
                    "HasNoKeypair",
                    { "Ref": "AWS::NoValue" },
                    { "Ref": "KeyPairName" }
                ]},
                "SecurityGroups": [{"Ref": "CoreOsSecurityGroup"}],
                "UserData" : { "Fn::Base64": { "Fn::Join": ["", [
                    "#cloud-config\n\n",
                    "coreos:\n",
                    "  etcd2:\n",
                    "    discovery: ", { "Ref": "DiscoveryURL" }, "\n",
                    "    advertise-client-urls: http://$", { "Ref": "AdvertisedIpAddress" }, "_ipv4:2379\n",
                    "    initial-advertise-peer-urls: http://$", { "Ref": "AdvertisedIpAddress" }, "_ipv4:2380\n",
                    "    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001\n",
                    "    listen-peer-urls: http://$", { "Ref": "AdvertisedIpAddress" }, "_ipv4:2380\n",
                    "  units:\n",
                    "    - name: etcd2.service\n",
                    "      command: start\n",
                    "    - name: fleet.service\n",
                    "      command: start\n"
                ]]}}
            }
        }
    },

    "Outputs" : {
        "AdminPanel": {
            "Value": { "Fn::Join": ["", [
                "ssh://", { "Fn::GetAtt": ["SshGateway", "DNSName"] }
            ]]},
            "Description": "SSH Gateway Url"
        }
    }
}
