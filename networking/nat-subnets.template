{
    "AWSTemplateFormatVersion" : "2010-09-09",

    "Description" : "General purpose subnets twith a route table having the public route mapped through a NAT.",

    "Metadata" : {
        "DefaultName" : "NatSubnets",
        "Dependencies": [
            {
                "TemplatePath": "networking/vpc",
                "Resources": {
                    "VpcId": "Vpc"
                },
                "Parameters": {
                    "VpcPrefix": "VpcPrefix"
                },
                "Outputs": {
                    "AzCount": "AzCount"
                }
            },
            {
                "TemplatePath": "networking/nat-gateway-subnets",
                "Resources": {
                    "NatServerSubnet1": "Subnet1",
                    "NatServerSubnet2": "Subnet2",
                    "NatServerSubnet3": "Subnet3"
                },
                "NestedDependency": "networking/vpc.template"
            }
        ]
    },

    "Parameters" : {
        "NatServerSubnet1" : {
            "Description" : "Subnet suffix to be concatenated with the VPC prefix. [nat-gateway-subnets.resources.Subnet1]",
            "Type" : "String"
        },
        "NatServerSubnet2" : {
            "Description" : "Subnet suffix to be concatenated with the VPC prefix. [nat-gateway-subnets.resources.Subnet2]",
            "Type" : "String"
        },
        "NatServerSubnet3" : {
            "Description" : "Subnet suffix to be concatenated with the VPC prefix. [nat-gateway-subnets.resources.Subnet3]",
            "Type" : "String",
            "Default" : ""
        },

        "Subnet1Suffix" : {
            "Description" : "Subnet suffix to be concatenated with the VPC prefix. ",
            "Type" : "Number",
            "Default" : "76"
        },

        "Subnet2Suffix" : {
            "Description" : "Subnet suffix to be concatenated with the VPC prefix. ",
            "Type" : "Number",
            "Default" : "77"
        },

        "Subnet3Suffix" : {
            "Description" : "Subnet suffix to be concatenated with the VPC prefix. ",
            "Type" : "Number",
            "Default" : "78"
        },

        "VpcPrefix" : {
            "Description" : "Prefix for the VPC [vpc.parameters.VpcPrefix]",
            "Type" : "String"
        },

        "VpcId" : {
            "Description" : "VPC id [vpc.resources.Vpc]",
            "Type" : "String"
        },

        "AzCount" : {
            "Description" : "Number of AZ. Third subnet will only be created if number is 3 [vpc.outputs.AzCount]",
            "Type" : "String"
        },

        "AvailableAzs" : {
            "Description" : "Comma-delimited list of three IP blocks",
            "Type" : "CommaDelimitedList",
            "Default" : ""
        }
    },

    "Conditions" : {
        "IsThreeAz" : { "Fn::Equals" : [{"Ref" : "AzCount"}, "3"]},
        "IsAzSupplied" : { "Fn::Not" : [{ "Fn::Equals" : [
            {"Fn::Select": ["0", {"Ref" : "AvailableAzs"}]}, ""
        ]}]}
    },

    "Resources" : {

        "Subnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "VpcId" },
                "CidrBlock" : { "Fn::Join" : [ "", [
                    { "Ref" : "VpcPrefix" }, ".", { "Ref" : "Subnet1Suffix" }, ".0/24"
                ]]},
                "AvailabilityZone": { "Fn::Select": [
                    "0", {"Fn::If" : [ "IsAzSupplied", {"Ref" : "AvailableAzs"}, { "Fn::GetAZs": "" } ]}
                ]},
                "Tags" : [{ "Key" : "Name", "Value" : "Private" }]
            }
        },
        "Nat1" : {
            "Type" : "AWS::EC2::NatGateway",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt" : ["Eip1", "AllocationId"]},
                "SubnetId" : { "Ref" : "NatServerSubnet1"}
            }
        },
        "Eip1" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc"
            }
        },
        "RouteTable1" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {"Ref": "VpcId"},
                "Tags" : []
            }
        },
        "PublicRoute1" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "RouteTableId" : { "Ref" : "RouteTable1" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "Nat1" }
            }
        },
        "RouteTableAssociation1" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "Subnet1" },
                "RouteTableId" : { "Ref" : "RouteTable1" }
            }
        },
        "AclAssociation1" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "Subnet1" },
                "NetworkAclId" : { "Ref" : "Acl" }
            }
        },

        "Subnet2" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "VpcId" },
                "CidrBlock" : { "Fn::Join" : [ "", [
                    { "Ref" : "VpcPrefix" }, ".", { "Ref" : "Subnet2Suffix" }, ".0/24"
                ]]},
                "AvailabilityZone": { "Fn::Select": [
                    "1", {"Fn::If" : [ "IsAzSupplied", {"Ref" : "AvailableAzs"}, { "Fn::GetAZs": "" } ]}
                ]},
                "Tags" : [{ "Key" : "Name", "Value" : "Private" }]
            }
        },
        "Nat2" : {
            "Type" : "AWS::EC2::NatGateway",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt" : ["Eip2", "AllocationId"]},
                "SubnetId" : { "Ref" : "NatServerSubnet2"}
            }
        },
        "Eip2" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc"
            }
        },
        "RouteTable2" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {"Ref": "VpcId"},
                "Tags" : []
            }
        },
        "PublicRoute2" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "RouteTableId" : { "Ref" : "RouteTable2" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "Nat2" }
            }
        },
        "RouteTableAssociation2" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "Subnet2" },
                "RouteTableId" : { "Ref" : "RouteTable2" }
            }
        },
        "AclAssociation2" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "Subnet2" },
                "NetworkAclId" : { "Ref" : "Acl" }
            }
        },

        "Subnet3" : {
            "Type" : "AWS::EC2::Subnet",
            "Condition" : "IsThreeAz",
            "Properties" : {
                "VpcId" : { "Ref" : "VpcId" },
                "CidrBlock" : { "Fn::Join" : [ "", [
                    { "Ref" : "VpcPrefix" }, ".", { "Ref" : "Subnet3Suffix" }, ".0/24"
                ]]},
                "AvailabilityZone": { "Fn::Select": [
                    "2", {"Fn::If" : [ "IsAzSupplied", {"Ref" : "AvailableAzs"}, { "Fn::GetAZs": "" } ]}
                ]},
                "Tags" : [{ "Key" : "Name", "Value" : "Private" }]
            }
        },
        "Nat3" : {
            "Type" : "AWS::EC2::NatGateway",
            "Condition" : "IsThreeAz",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt" : ["Eip3", "AllocationId"]},
                "SubnetId" : { "Ref" : "NatServerSubnet3"}
            }
        },
        "Eip3" : {
            "Type" : "AWS::EC2::EIP",
            "Condition" : "IsThreeAz",
            "Properties" : {
                "Domain" : "vpc"
            }
        },
        "RouteTable3" : {
            "Type" : "AWS::EC2::RouteTable",
            "Condition" : "IsThreeAz",
            "Properties" : {
                "VpcId" : {"Ref": "VpcId"},
                "Tags" : []
            }
        },
        "PublicRoute3" : {
            "Type" : "AWS::EC2::Route",
            "Condition" : "IsThreeAz",
            "Properties" : {
                "RouteTableId" : { "Ref" : "RouteTable3" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "Nat3" }
            }
        },
        "RouteTableAssociation3" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Condition" : "IsThreeAz",
            "Properties" : {
                "SubnetId" : { "Ref" : "Subnet3" },
                "RouteTableId" : { "Ref" : "RouteTable3" }
            }
        },
        "AclAssociation3" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Condition" : "IsThreeAz",
            "Properties" : {
                "SubnetId" : { "Ref" : "Subnet3" },
                "NetworkAclId" : { "Ref" : "Acl" }
            }
        },

        "Acl" : {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
                "VpcId" : {"Ref": "VpcId"},
                "Tags" : []
            }
        },

        "AclEntryInVpcRequests" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "Acl" },
                "RuleNumber" : "1000",
                "Protocol" : "6",
                "RuleAction" : "allow",
                "Egress" : "false",
                "CidrBlock" : { "Fn::Join" : [ "", [
                    { "Ref" : "VpcPrefix" }, ".0.0/16"
                ]]},
                "PortRange" : { "From" : "0", "To" : "32768" }
            }
        },
        "AclEntryInPublicDataPort" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "Acl" },
                "RuleNumber" : "1001",
                "Protocol" : "6",
                "RuleAction" : "allow",
                "Egress" : "false",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "32768", "To" : "65535" }
            }
        },
        "AclEntryOutPublicRequests" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "Acl" },
                "RuleNumber" : "1000",
                "Protocol" : "6",
                "RuleAction" : "allow",
                "Egress" : "true",
                "CidrBlock" : "0.0.0.0/0",
                "PortRange" : { "From" : "0", "To" : "32768" }
            }
        },
        "AclEntryOutVpcDataPort" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "Acl" },
                "RuleNumber" : "1001",
                "Protocol" : "6",
                "RuleAction" : "allow",
                "Egress" : "true",
                "CidrBlock" : { "Fn::Join" : [ "", [
                    { "Ref" : "VpcPrefix" }, ".0.0/16"
                ]]},
                "PortRange" : { "From" : "32768", "To" : "65535" }
            }
        }
    },

    "Outputs" : {
        "Subnets" : {
            "Description" : "The list of subnets for the ELBs",
            "Value" : { "Fn::Join" : ["", [
                {"Ref":"Subnet1"}, ",", {"Ref":"Subnet2"},
                { "Fn::If" : ["IsThreeAz",
                    { "Fn::Join" : ["", [",", {"Ref":"Subnet3"}]] },
                    { "Ref" : "AWS::NoValue" }
                ]}
            ]]}
        }
    }
}
