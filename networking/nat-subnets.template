AWSTemplateFormatVersion: 2010-09-09
Description: |
  General purpose subnets with traffic routed through NAT gateway.
Metadata:
  DefaultName: NatSubnets
  Dependencies:
    - TemplatePath: networking/vpc
      Resources:
        VpcId: Vpc
      Parameters:
        VpcPrefix: VpcPrefix
      Outputs:
        AzCount: AzCount
    - TemplatePath: networking/nat-gateway-subnets
      Resources:
        NatServerSubnet1: Subnet1
        NatServerSubnet2: Subnet2
        NatServerSubnet3: Subnet3
    - TemplatePath: analytics/logs-store
      Resources:
        WarningEventsTopic: WarningEvents
        CriticalEventsTopic: CriticalEvents
Parameters:
  NatServerSubnet1:
    Description: Subnet ID for NAT server in the first AZ.
    Type: String
  NatServerSubnet2:
    Description: Subnet ID for NAT server in the second AZ.
    Type: String
  NatServerSubnet3:
    Description: Subnet ID for NAT server in the third (and optional) AZ.
    Type: String
    Default: ''
  Subnet1Suffix:
    Description: 'Subnet suffix to be concatenated with the VPC prefix.'
    Type: Number
    Default: '76'
  Subnet2Suffix:
    Description: 'Subnet suffix to be concatenated with the VPC prefix.'
    Type: Number
    Default: '77'
  Subnet3Suffix:
    Description: 'Subnet suffix to be concatenated with the VPC prefix.'
    Type: Number
    Default: '78'
  VpcPrefix:
    Description: 'Prefix for the VPC'
    Type: String
  VpcId:
    Description: 'VPC ID'
    Type: String
  AzCount:
    Description: Number of AZs. Third subnet will only be created if number is 3
    Type: String
  AvailableAzs:
    Description: Comma-delimited list of three IP blocks
    Type: CommaDelimitedList
    Default: ''
  IsMultiAz:
    Description: Enables multi AZ deployment of NAT Gateway. The default is true.
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
  EnableGatewayEndpoints:
    Description: Enables multi AZ deployment of NAT Gateway. The default is true.
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'

  WarningEventsTopic:
    Description: SNS Warnings topic.
    Type: String
  CriticalEventsTopic:
    Description: SNS Critical Events topic.
    Type: String

  CreateWarningAlarms:
    Description: Create cloudwatch gateway warning alarms
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'

  CreateWarningAndCriticalAlarms:
    Description: Create both warning and critical cloudwatch gateway alarms
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'


  AttemptedVEstablishedPercentage:
    Description: Trigger alarm at this percentage
    Default: 2
    Type: String
  AttemptedVEstablishedPeriod:
    Description: Metric period for Attemped v Established alarm
    Default: 60
    Type: String
  AttemptedVEstablishedEvaluationPeriodsWarning:
    Description: No. of metric periods for assessment of the attemped v established alarm
    Default: 1
    Type: String
  AttemptedVEstablishedEvaluationPeriodsCritical:
    Description: No. of metric periods for assessment of the attemped v established alarm
    Default: 3
    Type: String
  AttemptedVEstablishedEvaluationThreshold:
    Description: Threshold for assessment of the attemped v established alarm
    Default: 0
    Type: String
  AttemptedVEstablishedMissingDataTreatment:
    Description: How to treat missing data for the attemped v established alarm.
    Type: String
    Default: 'missing'
    AllowedValues:
      - 'breaching'
      - 'notBreaching'
      - 'ignore'
      - 'missing'
  AttemptedVEstablishedComparisonOperator: 
    Description: How to compare returned value with threshold for alarm assessment
    Default: 'GreaterThanThreshold'
    Type: String
    AllowedValues:
      - 'GreaterThanOrEqualToThreshold'
      - 'GreaterThanThreshold'
      - 'GreaterThanUpperThreshold'
      - 'LessThanLowerOrGreaterThanUpperThreshold'
      - 'LessThanLowerThreshold'
      - 'LessThanOrEqualToThreshold'
      - 'LessThanThreshold'

  BytesInOutPeriod:
    Description: Metric period for BytesIn v BytesOut alarm
    Default: 60
    Type: String
  BytesInOutEvaluationPeriodsWarning:
    Description: No. of metric periods for assessment of the BytesIn v BytesOut alarm
    Default: 2
    Type: String
  BytesInOutEvaluationPeriodsCritical:
    Description: No. of metric periods for assessment of the BytesIn v BytesOut alarm
    Default: 4
    Type: String
  BytesInOutEvaluationThreshold:
    Description: Threshold for assessment of the BytesIn v BytesOut alarm
    Default: 1
    Type: String  
  BytesInOutMissingDataTreatment:
    Description: How to treat missing data for the BytesInOut alarm.
    Type: String
    Default: 'missing'
    AllowedValues:
      - 'breaching'
      - 'notBreaching'
      - 'ignore'
      - 'missing'
  BytesInOutComparisonOperator: 
    Description: How to compare returned value with threshold for alarm assessment
    Default: 'LessThanThreshold'
    Type: String
    AllowedValues:
      - 'GreaterThanOrEqualToThreshold'
      - 'GreaterThanThreshold'
      - 'GreaterThanUpperThreshold'
      - 'LessThanLowerOrGreaterThanUpperThreshold'
      - 'LessThanLowerThreshold'
      - 'LessThanOrEqualToThreshold'
      - 'LessThanThreshold'



  PacketsInOutPeriod:
    Description: Metric period for PacketsIn v PacketsOut alarm
    Default: 60
    Type: String
  PacketsInOutEvaluationPeriodsWarning:
    Description: No. of metric periods for assessment of the PacketsIn v PacketsOut alarm
    Default: 1
    Type: String
  PacketsInOutEvaluationPeriodsCritical:
    Description: No. of metric periods for assessment of the PacketsIn v PacketsOut alarm
    Default: 3
    Type: String
  PacketsInOutEvaluationThreshold:
    Description: Threshold for assessment of the PacketsIn v PacketsOut alarm
    Default: 1
    Type: String  
  PacketsInOutMissingDataTreatment:
    Description: How to treat missing data for the PacketsInOut alarm.
    Type: String
    Default: 'missing'
    AllowedValues:
      - 'breaching'
      - 'notBreaching'
      - 'ignore'
      - 'missing'
  PacketsInOutComparisonOperator: 
    Description: How to compare returned value with threshold for alarm assessment
    Default: 'GreaterThanOrEqualToThreshold'
    Type: String
    AllowedValues:
      - 'GreaterThanOrEqualToThreshold'
      - 'GreaterThanThreshold'
      - 'GreaterThanUpperThreshold'
      - 'LessThanLowerOrGreaterThanUpperThreshold'
      - 'LessThanLowerThreshold'
      - 'LessThanOrEqualToThreshold'
      - 'LessThanThreshold'

  ErrorPortAllocationPeriod:
    Description: Metric period for ErrorPortAllocation alarm
    Default: 60
    Type: String
  ErrorPortAllocationEvaluationPeriodsWarning:
    Description: No. of metric periods for assessment of the ErrorPortAllocation alarm
    Default: 1
    Type: String
  ErrorPortAllocationEvaluationPeriodsCritical:
    Description: No. of metric periods for assessment of the ErrorPortAllocation alarm
    Default: 3
    Type: String
  ErrorPortAllocationEvaluationThreshold:
    Description: Threshold for assessment of the ErrorPortAllocation alarm
    Default: 1
    Type: String  
  ErrorPortAllocationMissingDataTreatment:
    Description: How to treat missing data for the ErrorPortAllocation alarm.
    Type: String
    Default: 'missing'
    AllowedValues:
      - 'breaching'
      - 'notBreaching'
      - 'ignore'
      - 'missing'
  ErrorPortAllocationComparisonOperator: 
    Description: How to compare returned value with threshold for alarm assessment
    Default: 'GreaterThanOrEqualToThreshold'
    Type: String
    AllowedValues:
      - 'GreaterThanOrEqualToThreshold'
      - 'GreaterThanThreshold'
      - 'GreaterThanUpperThreshold'
      - 'LessThanLowerOrGreaterThanUpperThreshold'
      - 'LessThanLowerThreshold'
      - 'LessThanOrEqualToThreshold'
      - 'LessThanThreshold'

  PacketDropPeriod:
    Description: Metric period for PacketDrop alarm
    Default: 60
    Type: String
  PacketDropEvaluationPeriodsWarning:
    Description: No. of metric periods for assessment of the PacketDrop alarm
    Default: 1
    Type: String
  PacketDropEvaluationPeriodsCritical:
    Description: No. of metric periods for assessment of the PacketDrop alarm
    Default: 3
    Type: String
  PacketDropEvaluationThreshold:
    Description: Threshold for assessment of the PacketDrop alarm
    Default: 1
    Type: String  
  PacketDropMissingDataTreatment:
    Description: How to treat missing data for the PacketDrop alarm.
    Type: String
    Default: 'breaching'
    AllowedValues:
      - 'breaching'
      - 'notBreaching'
      - 'ignore'
      - 'missing'
  PacketDropComparisonOperator: 
    Description: How to compare returned value with threshold for alarm assessment
    Default: 'GreaterThanOrEqualToThreshold'
    Type: String
    AllowedValues:
      - 'GreaterThanOrEqualToThreshold'
      - 'GreaterThanThreshold'
      - 'GreaterThanUpperThreshold'
      - 'LessThanLowerOrGreaterThanUpperThreshold'
      - 'LessThanLowerThreshold'
      - 'LessThanOrEqualToThreshold'
      - 'LessThanThreshold'

Conditions:

  IsThreeAz: !Equals [!Ref AzCount, '3']
  IsAzSupplied: !Not [!Equals [!Select ['0', !Ref AvailableAzs], '']]

  IsMultiAzActive: !Equals [!Ref IsMultiAz, 'true']
  IsThreeMultiAz: !And [!Condition IsThreeAz, !Condition IsMultiAzActive]
  EnableGatewayEndpointsActive: !Equals [!Ref EnableGatewayEndpoints, 'true']

  AlarmsRequired: !Or [ !Equals [!Ref CreateWarningAlarms, 'true'], !Equals [!Ref CreateWarningAndCriticalAlarms, 'true']] 
  Az2Alarms: !And [!Condition IsMultiAzActive, !Condition AlarmsRequired]
  Az3Alarms: !And [!Condition IsThreeMultiAz, !Condition AlarmsRequired]

  CriticalAlarmsRequired: !Equals [!Ref CreateWarningAndCriticalAlarms, 'true']
  Az2CriticalAlarms: !And [!Condition IsMultiAzActive, !Condition CriticalAlarmsRequired]
  Az3CriticalAlarms: !And [!Condition IsThreeMultiAz, !Condition CriticalAlarmsRequired]

Resources:

  # Primary Subnet. This is the subnet that holds the
  # NAT gateway when non-multi az deployment is chosen.
  Subnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VpcId
      CidrBlock: !Sub '${VpcPrefix}.${Subnet1Suffix}.0/24' 
      AvailabilityZone: !Select 
        - '0'
        - !If 
          - IsAzSupplied
          - !Ref AvailableAzs
          - !GetAZs ''
      Tags:
        - Key: Name
          Value: Private
  Nat1:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt Eip1.AllocationId
      SubnetId: !Ref NatServerSubnet1
  Eip1:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  RouteTable1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VpcId
      Tags: []
  PublicRoute1:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref Nat1
  RouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref RouteTable1
  AclAssociation1:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref Subnet1
      NetworkAclId: !Ref Acl

  # Second subnet would use the first subnet's NAT gateway if
  # non-multiaz configuration is chosen.
  Subnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VpcId
      CidrBlock: !Sub '${VpcPrefix}.${Subnet2Suffix}.0/24' 
      AvailabilityZone: !Select 
        - '1'
        - !If 
          - IsAzSupplied
          - !Ref AvailableAzs
          - !GetAZs ''
      Tags:
        - Key: Name
          Value: Private
  Nat2:
    Type: 'AWS::EC2::NatGateway'
    Condition: IsMultiAzActive
    Properties:
      AllocationId: !GetAtt Eip2.AllocationId
      SubnetId: !Ref NatServerSubnet2
  Eip2:
    Type: 'AWS::EC2::EIP'
    Condition: IsMultiAzActive
    Properties:
      Domain: vpc
  RouteTable2:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VpcId
      Tags: []
  PublicRoute2:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !If ["IsMultiAzActive", !Ref Nat2, !Ref Nat1]
  RouteTableAssociation2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref RouteTable2
  AclAssociation2:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref Subnet2
      NetworkAclId: !Ref Acl

  # Third subnet is optional for zones where there's only 2 subnets.
  # It uses a combinational condition that depends on both whether
  # there's 2 or 3 subnets and whether multiaz configuration is selected
  Subnet3:
    Type: 'AWS::EC2::Subnet'
    Condition: IsThreeAz
    Properties:
      VpcId: !Ref VpcId
      CidrBlock: !Sub '${VpcPrefix}.${Subnet3Suffix}.0/24' 
      AvailabilityZone: !Select 
        - '2'
        - !If 
          - IsAzSupplied
          - !Ref AvailableAzs
          - !GetAZs ''
      Tags:
        - Key: Name
          Value: Private
  Nat3:
    Type: 'AWS::EC2::NatGateway'
    Condition: IsThreeMultiAz
    Properties:
      AllocationId: !GetAtt Eip3.AllocationId
      SubnetId: !Ref NatServerSubnet3
  Eip3:
    Type: 'AWS::EC2::EIP'
    Condition: IsThreeMultiAz
    Properties:
      Domain: vpc
  RouteTable3:
    Type: 'AWS::EC2::RouteTable'
    Condition: IsThreeAz
    Properties:
      VpcId: !Ref VpcId
      Tags: []
  PublicRoute3:
    Type: 'AWS::EC2::Route'
    Condition: IsThreeAz
    Properties:
      RouteTableId: !Ref RouteTable3
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !If ["IsThreeMultiAz", !Ref Nat3, !Ref Nat1]
  RouteTableAssociation3:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Condition: IsThreeAz
    Properties:
      SubnetId: !Ref Subnet3
      RouteTableId: !Ref RouteTable3
  AclAssociation3:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Condition: IsThreeAz
    Properties:
      SubnetId: !Ref Subnet3
      NetworkAclId: !Ref Acl

  # The ACL is shared across all two or three subnets.
  Acl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VpcId
      Tags: []
  AclEntryInVpcRequests:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref Acl
      RuleNumber: '1000'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: !Join 
        - ''
        - - !Ref VpcPrefix
          - .0.0/16
      PortRange:
        From: '0'
        To: '32768'
  AclEntryInPublicDataPort:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref Acl
      RuleNumber: '1001'
      Protocol: '6'
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '32768'
        To: '65535'
  AclEntryOutPublicRequests:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref Acl
      RuleNumber: '1000'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: '0'
        To: '32768'
  AclEntryOutVpcDataPort:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref Acl
      RuleNumber: '1001'
      Protocol: '6'
      RuleAction: allow
      Egress: 'true'
      CidrBlock: !Join 
        - ''
        - - !Ref VpcPrefix
          - .0.0/16
      PortRange:
        From: '32768'
        To: '65535'
  
  # Private endpoints for effeciency.
  # Gateway Endpoints
  S3Endpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: EnableGatewayEndpointsActive
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: ['*']
            Resource: ['*']
      RouteTableIds:
        - !Ref RouteTable1
        - !Ref RouteTable2
        - !If 
          - IsThreeAz
          - !Ref RouteTable3
          - !Ref 'AWS::NoValue'
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref VpcId
  DdbEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Condition: EnableGatewayEndpointsActive
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: ['*']
            Resource: ['*']
      RouteTableIds:
        - !Ref RouteTable1
        - !Ref RouteTable2
        - !If 
          - IsThreeAz
          - !Ref RouteTable3
          - !Ref 'AWS::NoValue'
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.dynamodb'
      VpcId: !Ref VpcId
  # /Gateway Endpoints

  # Start Nat1 Gateway Alarms 
  # Start warning alarms 

  Nat1AttemptedVEstablishedPercentageAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: AlarmsRequired
    Properties:
      AlarmDescription: >-
        Connections attempted - connections established
        Over 0 alarm, 0 or less healthy.
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref   AttemptedVEstablishedMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: attempted-established
          Label: Attempted not established (Actual)
          ReturnData: false
        - Id: e2
          Expression: !Sub 'attempted/100 * ${AttemptedVEstablishedPercentage}'
          Label: Attempted not established (Acceptable)
          ReturnData: false
        - Id: e3
          Expression: e2 - e1
          Label: result (Acceptable - actual)
          ReturnData: true
        - Id: attempted
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionAttemptCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: established
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionEstablishedCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref AttemptedVEstablishedEvaluationPeriodsWarning
      Threshold: !Ref AttemptedVEstablishedEvaluationThreshold
      ComparisonOperator: !Ref AttemptedVEstablishedComparisonOperator

  # Bytes alarm - unit is removed
  Nat1BytesOutToDestinationNotLessThanBytesInFromSourceAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: AlarmsRequired
    Properties:
      AlarmDescription: >-
        BytesInFromSource - BytesOutToDestination
        Should return 0
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref BytesInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: BytesInFromSource - BytesOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref BytesInOutPeriod
            Stat: Sum   
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref BytesInOutPeriod
            Stat: Sum
          ReturnData: false
      EvaluationPeriods: !Ref BytesInOutEvaluationPeriodsWarning
      Threshold: !Ref BytesInOutEvaluationThreshold
      ComparisonOperator: !Ref BytesInOutComparisonOperator

  #Packets alarm - unit stays in
  Nat1PacketsOutToDestinationNotLessThanPacketsInFromSourceAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: AlarmsRequired
    Properties:
      AlarmDescription: >-
        PacketsInFromSource - PacketsOutToDestination
        Should return 0
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref PacketsInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: PacketsInFromSource - PacketsOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref PacketsInOutPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref PacketsInOutPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref PacketsInOutEvaluationPeriodsWarning
      Threshold: !Ref PacketsInOutEvaluationThreshold
      ComparisonOperator: !Ref PacketsInOutComparisonOperator

  Nat1ErrorPortAllocationNotGreaterThanZero:
    Condition: AlarmsRequired
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref ErrorPortAllocationMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref ErrorPortAllocationPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref ErrorPortAllocationEvaluationPeriodsWarning
      Threshold: !Ref ErrorPortAllocationEvaluationThreshold
      ComparisonOperator:  !Ref ErrorPortAllocationComparisonOperator

  Nat1PacketsDropCountNotGreaterThanZero:
    Condition: AlarmsRequired
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref PacketDropMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref PacketDropPeriod
            Stat: Sum
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref PacketDropEvaluationPeriodsWarning
      Threshold: !Ref PacketDropEvaluationThreshold
      ComparisonOperator: !Ref PacketDropComparisonOperator

  #End warning Alarms
  #Start critical 
  
  Nat1AttemptedVEstablishedPercentageAlarmCritical:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: CriticalAlarmsRequired
    Properties:
      AlarmDescription: >-
        Connections attempted - connections established
        Over 0 alarm, 0 or less healthy.
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref   AttemptedVEstablishedMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: attempted-established
          Label: Attempted not established (Actual)
          ReturnData: false
        - Id: e2
          Expression: !Sub 'attempted/100 * ${AttemptedVEstablishedPercentage}'
          Label: Attempted not established (Acceptable)
          ReturnData: false
        - Id: e3
          Expression: e2 - e1
          Label: result (Acceptable - actual)
          ReturnData: true
        - Id: attempted
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionAttemptCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: established
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionEstablishedCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref AttemptedVEstablishedEvaluationPeriodsCritical
      Threshold: !Ref AttemptedVEstablishedEvaluationThreshold
      ComparisonOperator: !Ref AttemptedVEstablishedComparisonOperator

  # Bytes alarm - unit is removed
  Nat1BytesOutToDestinationNotLessThanBytesInFromSourceAlarmCritical:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: CriticalAlarmsRequired
    Properties:
      AlarmDescription: >-
        BytesInFromSource - BytesOutToDestination
        Should return 0
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref BytesInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: BytesInFromSource - BytesOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref BytesInOutPeriod
            Stat: Sum   
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref BytesInOutPeriod
            Stat: Sum
          ReturnData: false
      EvaluationPeriods: !Ref BytesInOutEvaluationPeriodsCritical
      Threshold: !Ref BytesInOutEvaluationThreshold
      ComparisonOperator: !Ref BytesInOutComparisonOperator

  #Packets alarm - unit stays in
  Nat1PacketsOutToDestinationNotLessThanPacketsInFromSourceAlarmCritical:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: CriticalAlarmsRequired
    Properties:
      AlarmDescription: >-
        PacketsInFromSource - PacketsOutToDestination
        Should return 0
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref PacketsInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: PacketsInFromSource - PacketsOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref PacketsInOutPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref PacketsInOutPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref PacketsInOutEvaluationPeriodsCritical
      Threshold: !Ref PacketsInOutEvaluationThreshold
      ComparisonOperator: !Ref PacketsInOutComparisonOperator

  Nat1ErrorPortAllocationNotGreaterThanZeroCritical:
    Condition: CriticalAlarmsRequired
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref ErrorPortAllocationMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref ErrorPortAllocationPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref ErrorPortAllocationEvaluationPeriodsCritical
      Threshold: !Ref ErrorPortAllocationEvaluationThreshold
      ComparisonOperator:  !Ref ErrorPortAllocationComparisonOperator

  Nat1PacketsDropCountNotGreaterThanZeroCritical:
    Condition: CriticalAlarmsRequired
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref PacketDropMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat1
            Period: !Ref PacketDropPeriod
            Stat: Sum
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref PacketDropEvaluationPeriodsCritical
      Threshold: !Ref PacketDropEvaluationThreshold
      ComparisonOperator: !Ref PacketDropComparisonOperator


  # End Nat1 alarms
  # Start Nat2 GatewayAlarms 
  # Start warning alarms 

  Nat2AttemptedVEstablishedPercentageAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az2Alarms
    Properties:
      AlarmDescription: >-
        Connections attempted - connections established
        Over 0 alarm, 0 or less healthy.
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref   AttemptedVEstablishedMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: attempted-established
          Label: Attempted not established (Actual)
          ReturnData: false
        - Id: e2
          Expression: !Sub 'attempted/100 * ${AttemptedVEstablishedPercentage}'
          Label: Attempted not established (Acceptable)
          ReturnData: false
        - Id: e3
          Expression: e2 - e1
          Label: result (Acceptable - actual)
          ReturnData: true
        - Id: attempted
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionAttemptCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: established
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionEstablishedCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref AttemptedVEstablishedEvaluationPeriodsWarning
      Threshold: !Ref AttemptedVEstablishedEvaluationThreshold
      ComparisonOperator: !Ref AttemptedVEstablishedComparisonOperator
  
  # Bytes alarm - unit is removed
  Nat2BytesOutToDestinationNotLessThanBytesInFromSourceAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az2Alarms
    Properties:
      AlarmDescription: >-
        BytesInFromSource - BytesOutToDestination
        Should return 0
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref BytesInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: BytesInFromSource - BytesOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref BytesInOutPeriod
            Stat: Sum   
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref BytesInOutPeriod
            Stat: Sum
          ReturnData: false
      EvaluationPeriods: !Ref BytesInOutEvaluationPeriodsWarning
      Threshold: !Ref BytesInOutEvaluationThreshold
      ComparisonOperator: !Ref BytesInOutComparisonOperator

  # Packets alarm - unit stays in
  Nat2PacketsOutToDestinationNotLessThanPacketsInFromSourceAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az2Alarms
    Properties:
      AlarmDescription: >-
        PacketsInFromSource - PacketsOutToDestination
        Should return 0
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref PacketsInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: PacketsInFromSource - PacketsOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref PacketsInOutPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref PacketsInOutPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref PacketsInOutEvaluationPeriodsWarning
      Threshold: !Ref PacketsInOutEvaluationThreshold
      ComparisonOperator: !Ref PacketsInOutComparisonOperator

  Nat2ErrorPortAllocationNotGreaterThanZero:
    Condition: Az2Alarms
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref ErrorPortAllocationMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref ErrorPortAllocationPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref ErrorPortAllocationEvaluationPeriodsWarning
      Threshold: !Ref ErrorPortAllocationEvaluationThreshold
      ComparisonOperator:  !Ref ErrorPortAllocationComparisonOperator

  Nat2PacketsDropCountNotGreaterThanZero:
    Condition: Az2Alarms
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref PacketDropMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref PacketDropPeriod
            Stat: Sum
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref PacketDropEvaluationPeriodsWarning
      Threshold: !Ref PacketDropEvaluationThreshold
      ComparisonOperator: !Ref PacketDropComparisonOperator

  # End warning Alarms
  # Start critical 
  
  Nat2AttemptedVEstablishedPercentageAlarmCritical:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az2CriticalAlarms
    Properties:
      AlarmDescription: >-
        Connections attempted - connections established
        Over 0 alarm, 0 or less healthy.
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref   AttemptedVEstablishedMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: attempted-established
          Label: Attempted not established (Actual)
          ReturnData: false
        - Id: e2
          Expression: !Sub 'attempted/100 * ${AttemptedVEstablishedPercentage}'
          Label: Attempted not established (Acceptable)
          ReturnData: false
        - Id: e3
          Expression: e2 - e1
          Label: result (Acceptable - actual)
          ReturnData: true
        - Id: attempted
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionAttemptCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: established
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionEstablishedCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref AttemptedVEstablishedEvaluationPeriodsCritical
      Threshold: !Ref AttemptedVEstablishedEvaluationThreshold
      ComparisonOperator: !Ref AttemptedVEstablishedComparisonOperator

  # Bytes alarm - unit is removed
  Nat2BytesOutToDestinationNotLessThanBytesInFromSourceAlarmCritical:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az2CriticalAlarms
    Properties:
      AlarmDescription: >-
        BytesInFromSource - BytesOutToDestination
        Should return 0
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref BytesInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: BytesInFromSource - BytesOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref BytesInOutPeriod
            Stat: Sum   
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref BytesInOutPeriod
            Stat: Sum
          ReturnData: false
      EvaluationPeriods: !Ref BytesInOutEvaluationPeriodsCritical
      Threshold: !Ref BytesInOutEvaluationThreshold
      ComparisonOperator: !Ref BytesInOutComparisonOperator

  #Packets alarm - unit stays in
  Nat2PacketsOutToDestinationNotLessThanPacketsInFromSourceAlarmCritical:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az2CriticalAlarms
    Properties:
      AlarmDescription: >-
        PacketsInFromSource - PacketsOutToDestination
        Should return 0
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref PacketsInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: PacketsInFromSource - PacketsOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref PacketsInOutPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref PacketsInOutPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref PacketsInOutEvaluationPeriodsCritical
      Threshold: !Ref PacketsInOutEvaluationThreshold
      ComparisonOperator: !Ref PacketsInOutComparisonOperator

  Nat2ErrorPortAllocationNotGreaterThanZeroCritical:
    Condition: Az2CriticalAlarms
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref ErrorPortAllocationMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref ErrorPortAllocationPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref ErrorPortAllocationEvaluationPeriodsCritical
      Threshold: !Ref ErrorPortAllocationEvaluationThreshold
      ComparisonOperator:  !Ref ErrorPortAllocationComparisonOperator

  Nat2PacketsDropCountNotGreaterThanZeroCritical:
    Condition: Az2CriticalAlarms
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref PacketDropMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat2
            Period: !Ref PacketDropPeriod
            Stat: Sum
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref PacketDropEvaluationPeriodsCritical
      Threshold: !Ref PacketDropEvaluationThreshold
      ComparisonOperator: !Ref PacketDropComparisonOperator

  # End Nat2 alarms

  # Start Nat3 Gateway Alarms 
  # Start warning alarms 

  Nat3AttemptedVEstablishedPercentageAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az3Alarms
    Properties:
      AlarmDescription: >-
        Connections attempted - connections established
        Over 0 alarm, 0 or less healthy.
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref   AttemptedVEstablishedMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: attempted-established
          Label: Attempted not established (Actual)
          ReturnData: false
        - Id: e2
          Expression: !Sub 'attempted/100 * ${AttemptedVEstablishedPercentage}'
          Label: Attempted not established (Acceptable)
          ReturnData: false
        - Id: e3
          Expression: e2 - e1
          Label: result (Acceptable - actual)
          ReturnData: true
        - Id: attempted
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionAttemptCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: established
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionEstablishedCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref AttemptedVEstablishedEvaluationPeriodsWarning
      Threshold: !Ref AttemptedVEstablishedEvaluationThreshold
      ComparisonOperator: !Ref AttemptedVEstablishedComparisonOperator

  # Bytes alarm - unit is removed
  Nat3BytesOutToDestinationNotLessThanBytesInFromSourceAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az3Alarms
    Properties:
      AlarmDescription: >-
        BytesInFromSource - BytesOutToDestination
        Should return 0
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref BytesInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: BytesInFromSource - BytesOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref BytesInOutPeriod
            Stat: Sum   
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref BytesInOutPeriod
            Stat: Sum
          ReturnData: false
      EvaluationPeriods: !Ref BytesInOutEvaluationPeriodsWarning
      Threshold: !Ref BytesInOutEvaluationThreshold
      ComparisonOperator: !Ref BytesInOutComparisonOperator

  # Packets alarm - unit stays in
  Nat3PacketsOutToDestinationNotLessThanPacketsInFromSourceAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az3Alarms
    Properties:
      AlarmDescription: >-
        PacketsInFromSource - PacketsOutToDestination
        Should return 0
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref PacketsInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: PacketsInFromSource - PacketsOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref PacketsInOutPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref PacketsInOutPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref PacketsInOutEvaluationPeriodsWarning
      Threshold: !Ref PacketsInOutEvaluationThreshold
      ComparisonOperator: !Ref PacketsInOutComparisonOperator

  Nat3ErrorPortAllocationNotGreaterThanZero:
    Condition: Az3Alarms
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref ErrorPortAllocationMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref ErrorPortAllocationPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref ErrorPortAllocationEvaluationPeriodsWarning
      Threshold: !Ref ErrorPortAllocationEvaluationThreshold
      ComparisonOperator:  !Ref ErrorPortAllocationComparisonOperator

  Nat3PacketsDropCountNotGreaterThanZero:
    Condition: Az3Alarms
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref WarningEventsTopic
      TreatMissingData: !Ref PacketDropMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref PacketDropPeriod
            Stat: Sum
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref PacketDropEvaluationPeriodsWarning
      Threshold: !Ref PacketDropEvaluationThreshold
      ComparisonOperator: !Ref PacketDropComparisonOperator

  #End warning Alarms
  #Start critical 
  
  Nat3AttemptedVEstablishedPercentageAlarmCritical:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az3CriticalAlarms
    Properties:
      AlarmDescription: >-
        Connections attempted - connections established
        Over 0 alarm, 0 or less healthy.
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref   AttemptedVEstablishedMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: attempted-established
          Label: Attempted not established (Actual)
          ReturnData: false
        - Id: e2
          Expression: !Sub 'attempted/100 * ${AttemptedVEstablishedPercentage}'
          Label: Attempted not established (Acceptable)
          ReturnData: false
        - Id: e3
          Expression: e2 - e1
          Label: result (Acceptable - actual)
          ReturnData: true
        - Id: attempted
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionAttemptCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: established
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ConnectionEstablishedCount
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref   AttemptedVEstablishedPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref AttemptedVEstablishedEvaluationPeriodsCritical
      Threshold: !Ref AttemptedVEstablishedEvaluationThreshold
      ComparisonOperator: !Ref AttemptedVEstablishedComparisonOperator

  # Bytes alarm - unit is removed
  Nat3BytesOutToDestinationNotLessThanBytesInFromSourceAlarmCritical:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az3CriticalAlarms
    Properties:
      AlarmDescription: >-
        BytesInFromSource - BytesOutToDestination
        Should return 0
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref BytesInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: BytesInFromSource - BytesOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref BytesInOutPeriod
            Stat: Sum   
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: BytesOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref BytesInOutPeriod
            Stat: Sum
          ReturnData: false
      EvaluationPeriods: !Ref BytesInOutEvaluationPeriodsCritical
      Threshold: !Ref BytesInOutEvaluationThreshold
      ComparisonOperator: !Ref BytesInOutComparisonOperator

  #Packets alarm - unit stays in
  Nat3PacketsOutToDestinationNotLessThanPacketsInFromSourceAlarmCritical:
    Type: 'AWS::CloudWatch::Alarm'
    Condition: Az3CriticalAlarms
    Properties:
      AlarmDescription: >-
        PacketsInFromSource - PacketsOutToDestination
        Should return 0
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref PacketsInOutMissingDataTreatment
      Metrics:
        - Id: e1
          Expression: m1-m2
          Label: PacketsInFromSource - PacketsOutToDestination
          ReturnData: true
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsInFromSource
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref PacketsInOutPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: false
        - Id: m2
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: PacketsOutToDestination
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref PacketsInOutPeriod
            Stat: Sum
            Unit: Count
          ReturnData: false
      EvaluationPeriods: !Ref PacketsInOutEvaluationPeriodsCritical
      Threshold: !Ref PacketsInOutEvaluationThreshold
      ComparisonOperator: !Ref PacketsInOutComparisonOperator

  Nat3ErrorPortAllocationNotGreaterThanZeroCritical:
    Condition: Az3CriticalAlarms
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref ErrorPortAllocationMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref ErrorPortAllocationPeriod
            Stat: Sum   
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref ErrorPortAllocationEvaluationPeriodsCritical
      Threshold: !Ref ErrorPortAllocationEvaluationThreshold
      ComparisonOperator:  !Ref ErrorPortAllocationComparisonOperator

  Nat3PacketsDropCountNotGreaterThanZeroCritical:
    Condition: Az3CriticalAlarms
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: >-
        ErrorPortAllocation Not GreaterThanZero
        Should return 0 or null.
      AlarmActions:
        - !Ref CriticalEventsTopic
      TreatMissingData: !Ref PacketDropMissingDataTreatment
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              Namespace: AWS/NATGateway
              MetricName: ErrorPortAllocation
              Dimensions:
                - Name: NatGatewayId
                  Value: !Ref Nat3
            Period: !Ref PacketDropPeriod
            Stat: Sum
            Unit: Count
          ReturnData: true
      EvaluationPeriods: !Ref PacketDropEvaluationPeriodsCritical
      Threshold: !Ref PacketDropEvaluationThreshold
      ComparisonOperator: !Ref PacketDropComparisonOperator

  # End Nat3 alarms

Outputs:
  # This comma delimited string helps piece together
  # a list of subnets. Used for ASG in depending templates
  # where they just need to spared to maximum number of
  # availability zones.
  Subnets:
    Description: The list of subnets for the ELBs
    Value: !Join 
      - ''
      - - !Sub '${Subnet1},${Subnet2}'
        - !If 
          - IsThreeAz
          - !Sub ',${Subnet3}'
          - !Ref 'AWS::NoValue'